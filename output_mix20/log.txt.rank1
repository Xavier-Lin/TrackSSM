[09/27 13:18:09] detectron2 INFO: Rank of current process: 1. World size: 4
[09/27 13:18:11] detectron2 INFO: Environment info:
-------------------------------  ----------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/data/zelinliu/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.4
detectron2 arch flags            8.6
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          1.9.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version                   470.199.02
CUDA_HOME                        /usr/local/cuda-11.4
Pillow                           9.5.0
torchvision                      0.10.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[09/27 13:18:11] detectron2 INFO: Command line arguments: Namespace(config_file='configs/MDR-r50-500pro-50e.yaml', resume=False, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50153', opts=[])
[09/27 13:18:11] detectron2 INFO: Contents of args.config_file=configs/MDR-r50-500pro-50e.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-MDR.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/data/zelinliu/SparseRCNN/resnet50-0676ba61.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mMDR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m("my_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(49532,[39m[38;5;141m [39m[38;5;141m58966)[39m[38;5;15m [39m[38;5;242m# 1769[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m63684[39m[38;5;15m [39m[38;5;242m#1769*36[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m [39m[38;5;242m# ÊöÇÊó∂‰∏çÊîØÊåÅÊ∑∑ÂêàÁ≤æÂ∫¶ËÆ≠ÁªÉ ‰ª•Âèä ÂçäÁ≤æÂ∫¶Êé®ÁêÜ[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800,[39m[38;5;141m [39m[38;5;141m832,[39m[38;5;141m [39m[38;5;141m864)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1620[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput_mix20[39m[38;5;186m"[39m

[09/27 13:18:12] detectron2.engine.defaults INFO: Model:
MDR(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (init_proposal_features): Embedding(500, 256)
  (init_proposal_boxes): Embedding(500, 4)
  (head): DynamicHead(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (head_series): ModuleList(
      (0): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (1): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (2): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (3): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (4): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (5): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): HungarianMatcher()
  )
)
[09/27 13:18:12] detectron2 INFO: ==> initializing train data from /data/zelinliu/SparseRCNN/mix/mix_20/annotations/train.json, 
 images from /data/zelinliu ...
[09/27 13:18:22] detectron2 WARNING: 
        Category_ids in current annotations file are not start to 0, we will map 'category_id' in the annotation files to 0..num_categories !      
                 
[09/27 13:18:22] detectron2 INFO: Creating video index!
[09/27 13:18:22] detectron2 INFO: TransformGens used in training: [RandomFlip(), ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800, 832, 864), max_size=1500, sample_style='choice'), <detectron2.data.transforms.augmentation_impl.RandomApply object at 0x7f1c3b70d370>]
[09/27 13:18:22] detectron2 INFO: Loaded Custom dataset 28301 samples
[09/27 13:18:25] detectron2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /data/zelinliu/SparseRCNN/resnet50-0676ba61.pth ...
[09/27 13:18:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /data/zelinliu/SparseRCNN/resnet50-0676ba61.pth ...
[09/27 13:18:25] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.0.conv1.weight[0m
[34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.0.conv2.weight[0m
[34mbackbone.bottom_up.res2.0.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.0.conv3.weight[0m
[34mbackbone.bottom_up.res2.0.shortcut.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.0.shortcut.weight[0m
[34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.1.conv1.weight[0m
[34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.1.conv2.weight[0m
[34mbackbone.bottom_up.res2.1.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.1.conv3.weight[0m
[34mbackbone.bottom_up.res2.2.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.2.conv1.weight[0m
[34mbackbone.bottom_up.res2.2.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.2.conv2.weight[0m
[34mbackbone.bottom_up.res2.2.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res2.2.conv3.weight[0m
[34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.0.conv1.weight[0m
[34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.0.conv2.weight[0m
[34mbackbone.bottom_up.res3.0.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.0.conv3.weight[0m
[34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.0.shortcut.weight[0m
[34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.1.conv1.weight[0m
[34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.1.conv2.weight[0m
[34mbackbone.bottom_up.res3.1.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.1.conv3.weight[0m
[34mbackbone.bottom_up.res3.2.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.2.conv1.weight[0m
[34mbackbone.bottom_up.res3.2.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.2.conv2.weight[0m
[34mbackbone.bottom_up.res3.2.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.2.conv3.weight[0m
[34mbackbone.bottom_up.res3.3.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.3.conv1.weight[0m
[34mbackbone.bottom_up.res3.3.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.3.conv2.weight[0m
[34mbackbone.bottom_up.res3.3.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res3.3.conv3.weight[0m
[34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.0.conv1.weight[0m
[34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.0.conv2.weight[0m
[34mbackbone.bottom_up.res4.0.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.0.conv3.weight[0m
[34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.0.shortcut.weight[0m
[34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.1.conv1.weight[0m
[34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.1.conv2.weight[0m
[34mbackbone.bottom_up.res4.1.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.1.conv3.weight[0m
[34mbackbone.bottom_up.res4.2.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.2.conv1.weight[0m
[34mbackbone.bottom_up.res4.2.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.2.conv2.weight[0m
[34mbackbone.bottom_up.res4.2.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.2.conv3.weight[0m
[34mbackbone.bottom_up.res4.3.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.3.conv1.weight[0m
[34mbackbone.bottom_up.res4.3.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.3.conv2.weight[0m
[34mbackbone.bottom_up.res4.3.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.3.conv3.weight[0m
[34mbackbone.bottom_up.res4.4.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.4.conv1.weight[0m
[34mbackbone.bottom_up.res4.4.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.4.conv2.weight[0m
[34mbackbone.bottom_up.res4.4.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.4.conv3.weight[0m
[34mbackbone.bottom_up.res4.5.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.5.conv1.weight[0m
[34mbackbone.bottom_up.res4.5.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.5.conv2.weight[0m
[34mbackbone.bottom_up.res4.5.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res4.5.conv3.weight[0m
[34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.0.conv1.weight[0m
[34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.0.conv2.weight[0m
[34mbackbone.bottom_up.res5.0.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.0.conv3.weight[0m
[34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.0.shortcut.weight[0m
[34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.1.conv1.weight[0m
[34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.1.conv2.weight[0m
[34mbackbone.bottom_up.res5.1.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.1.conv3.weight[0m
[34mbackbone.bottom_up.res5.2.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.2.conv1.weight[0m
[34mbackbone.bottom_up.res5.2.conv2.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.2.conv2.weight[0m
[34mbackbone.bottom_up.res5.2.conv3.norm.{bias, weight}[0m
[34mbackbone.bottom_up.res5.2.conv3.weight[0m
[34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
[34mbackbone.bottom_up.stem.conv1.weight[0m
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mhead.head_series.0.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.0.class_logits.{bias, weight}[0m
[34mhead.head_series.0.cls_module.0.weight[0m
[34mhead.head_series.0.cls_module.1.{bias, weight}[0m
[34mhead.head_series.0.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.0.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.0.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.0.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.0.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.0.linear1.{bias, weight}[0m
[34mhead.head_series.0.linear2.{bias, weight}[0m
[34mhead.head_series.0.norm1.{bias, weight}[0m
[34mhead.head_series.0.norm2.{bias, weight}[0m
[34mhead.head_series.0.norm3.{bias, weight}[0m
[34mhead.head_series.0.reg_module.0.weight[0m
[34mhead.head_series.0.reg_module.1.{bias, weight}[0m
[34mhead.head_series.0.reg_module.3.weight[0m
[34mhead.head_series.0.reg_module.4.{bias, weight}[0m
[34mhead.head_series.0.reg_module.6.weight[0m
[34mhead.head_series.0.reg_module.7.{bias, weight}[0m
[34mhead.head_series.0.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34mhead.head_series.1.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.1.class_logits.{bias, weight}[0m
[34mhead.head_series.1.cls_module.0.weight[0m
[34mhead.head_series.1.cls_module.1.{bias, weight}[0m
[34mhead.head_series.1.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.1.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.1.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.1.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.1.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.1.linear1.{bias, weight}[0m
[34mhead.head_series.1.linear2.{bias, weight}[0m
[34mhead.head_series.1.norm1.{bias, weight}[0m
[34mhead.head_series.1.norm2.{bias, weight}[0m
[34mhead.head_series.1.norm3.{bias, weight}[0m
[34mhead.head_series.1.reg_module.0.weight[0m
[34mhead.head_series.1.reg_module.1.{bias, weight}[0m
[34mhead.head_series.1.reg_module.3.weight[0m
[34mhead.head_series.1.reg_module.4.{bias, weight}[0m
[34mhead.head_series.1.reg_module.6.weight[0m
[34mhead.head_series.1.reg_module.7.{bias, weight}[0m
[34mhead.head_series.1.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34mhead.head_series.2.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.2.class_logits.{bias, weight}[0m
[34mhead.head_series.2.cls_module.0.weight[0m
[34mhead.head_series.2.cls_module.1.{bias, weight}[0m
[34mhead.head_series.2.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.2.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.2.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.2.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.2.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.2.linear1.{bias, weight}[0m
[34mhead.head_series.2.linear2.{bias, weight}[0m
[34mhead.head_series.2.norm1.{bias, weight}[0m
[34mhead.head_series.2.norm2.{bias, weight}[0m
[34mhead.head_series.2.norm3.{bias, weight}[0m
[34mhead.head_series.2.reg_module.0.weight[0m
[34mhead.head_series.2.reg_module.1.{bias, weight}[0m
[34mhead.head_series.2.reg_module.3.weight[0m
[34mhead.head_series.2.reg_module.4.{bias, weight}[0m
[34mhead.head_series.2.reg_module.6.weight[0m
[34mhead.head_series.2.reg_module.7.{bias, weight}[0m
[34mhead.head_series.2.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34mhead.head_series.3.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.3.class_logits.{bias, weight}[0m
[34mhead.head_series.3.cls_module.0.weight[0m
[34mhead.head_series.3.cls_module.1.{bias, weight}[0m
[34mhead.head_series.3.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.3.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.3.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.3.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.3.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.3.linear1.{bias, weight}[0m
[34mhead.head_series.3.linear2.{bias, weight}[0m
[34mhead.head_series.3.norm1.{bias, weight}[0m
[34mhead.head_series.3.norm2.{bias, weight}[0m
[34mhead.head_series.3.norm3.{bias, weight}[0m
[34mhead.head_series.3.reg_module.0.weight[0m
[34mhead.head_series.3.reg_module.1.{bias, weight}[0m
[34mhead.head_series.3.reg_module.3.weight[0m
[34mhead.head_series.3.reg_module.4.{bias, weight}[0m
[34mhead.head_series.3.reg_module.6.weight[0m
[34mhead.head_series.3.reg_module.7.{bias, weight}[0m
[34mhead.head_series.3.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34mhead.head_series.4.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.4.class_logits.{bias, weight}[0m
[34mhead.head_series.4.cls_module.0.weight[0m
[34mhead.head_series.4.cls_module.1.{bias, weight}[0m
[34mhead.head_series.4.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.4.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.4.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.4.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.4.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.4.linear1.{bias, weight}[0m
[34mhead.head_series.4.linear2.{bias, weight}[0m
[34mhead.head_series.4.norm1.{bias, weight}[0m
[34mhead.head_series.4.norm2.{bias, weight}[0m
[34mhead.head_series.4.norm3.{bias, weight}[0m
[34mhead.head_series.4.reg_module.0.weight[0m
[34mhead.head_series.4.reg_module.1.{bias, weight}[0m
[34mhead.head_series.4.reg_module.3.weight[0m
[34mhead.head_series.4.reg_module.4.{bias, weight}[0m
[34mhead.head_series.4.reg_module.6.weight[0m
[34mhead.head_series.4.reg_module.7.{bias, weight}[0m
[34mhead.head_series.4.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34mhead.head_series.5.bboxes_delta.{bias, weight}[0m
[34mhead.head_series.5.class_logits.{bias, weight}[0m
[34mhead.head_series.5.cls_module.0.weight[0m
[34mhead.head_series.5.cls_module.1.{bias, weight}[0m
[34mhead.head_series.5.inst_interact.dynamic_layer.{bias, weight}[0m
[34mhead.head_series.5.inst_interact.norm1.{bias, weight}[0m
[34mhead.head_series.5.inst_interact.norm2.{bias, weight}[0m
[34mhead.head_series.5.inst_interact.norm3.{bias, weight}[0m
[34mhead.head_series.5.inst_interact.out_layer.{bias, weight}[0m
[34mhead.head_series.5.linear1.{bias, weight}[0m
[34mhead.head_series.5.linear2.{bias, weight}[0m
[34mhead.head_series.5.norm1.{bias, weight}[0m
[34mhead.head_series.5.norm2.{bias, weight}[0m
[34mhead.head_series.5.norm3.{bias, weight}[0m
[34mhead.head_series.5.reg_module.0.weight[0m
[34mhead.head_series.5.reg_module.1.{bias, weight}[0m
[34mhead.head_series.5.reg_module.3.weight[0m
[34mhead.head_series.5.reg_module.4.{bias, weight}[0m
[34mhead.head_series.5.reg_module.6.weight[0m
[34mhead.head_series.5.reg_module.7.{bias, weight}[0m
[34mhead.head_series.5.self_attn.out_proj.{bias, weight}[0m
[34mhead.head_series.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34minit_proposal_boxes.weight[0m
[34minit_proposal_features.weight[0m
[09/27 13:18:25] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.0.conv3.weight[0m
  [35mlayer1.0.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.0.downsample.0.weight[0m
  [35mlayer1.0.downsample.1.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.1.conv3.weight[0m
  [35mlayer1.1.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.2.conv1.weight[0m
  [35mlayer1.2.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.2.conv2.weight[0m
  [35mlayer1.2.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer1.2.conv3.weight[0m
  [35mlayer1.2.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.0.conv3.weight[0m
  [35mlayer2.0.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.1.conv3.weight[0m
  [35mlayer2.1.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.2.conv1.weight[0m
  [35mlayer2.2.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.2.conv2.weight[0m
  [35mlayer2.2.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.2.conv3.weight[0m
  [35mlayer2.2.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.3.conv1.weight[0m
  [35mlayer2.3.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.3.conv2.weight[0m
  [35mlayer2.3.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer2.3.conv3.weight[0m
  [35mlayer2.3.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.0.conv3.weight[0m
  [35mlayer3.0.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.1.conv3.weight[0m
  [35mlayer3.1.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.2.conv1.weight[0m
  [35mlayer3.2.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.2.conv2.weight[0m
  [35mlayer3.2.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.2.conv3.weight[0m
  [35mlayer3.2.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.3.conv1.weight[0m
  [35mlayer3.3.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.3.conv2.weight[0m
  [35mlayer3.3.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.3.conv3.weight[0m
  [35mlayer3.3.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.4.conv1.weight[0m
  [35mlayer3.4.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.4.conv2.weight[0m
  [35mlayer3.4.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.4.conv3.weight[0m
  [35mlayer3.4.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.5.conv1.weight[0m
  [35mlayer3.5.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.5.conv2.weight[0m
  [35mlayer3.5.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer3.5.conv3.weight[0m
  [35mlayer3.5.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.0.conv3.weight[0m
  [35mlayer4.0.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.1.conv3.weight[0m
  [35mlayer4.1.bn3.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.2.conv1.weight[0m
  [35mlayer4.2.bn1.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.2.conv2.weight[0m
  [35mlayer4.2.bn2.{bias, running_mean, running_var, weight}[0m
  [35mlayer4.2.conv3.weight[0m
  [35mlayer4.2.bn3.{bias, running_mean, running_var, weight}[0m
  [35mfc.{bias, weight}[0m
[09/27 13:18:25] detectron2.engine.train_loop INFO: Starting training from iteration 0
[09/27 14:34:41] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| pedestrian | 1134614      |
|            |              |[0m
[09/27 14:34:42] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 14:34:42] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 14:34:42] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 14:34:43] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 14:34:44] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 14:34:51] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 14:34:54] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/data/zelinliu/detectron2/detectron2/engine/train_loop.py", line 156, in train
    self.after_step()
  File "/data/zelinliu/detectron2/detectron2/engine/train_loop.py", line 190, in after_step
    h.after_step()
  File "/data/zelinliu/detectron2/detectron2/engine/hooks.py", line 556, in after_step
    self._do_eval()
  File "/data/zelinliu/detectron2/detectron2/engine/hooks.py", line 529, in _do_eval
    results = self._func()
  File "/data/zelinliu/detectron2/detectron2/engine/defaults.py", line 453, in test_and_save_results
    self._last_eval_results = self.test(self.cfg, self.model)
  File "/data/zelinliu/detectron2/detectron2/engine/defaults.py", line 617, in test
    results_i = inference_on_dataset(model, data_loader, evaluator)
  File "/data/zelinliu/detectron2/detectron2/evaluation/evaluator.py", line 158, in inference_on_dataset
    outputs = model(inputs)
  File "/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 799, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/zelinliu/SparseRCNN/sparsercnn/detector.py", line 138, in forward
    images, images_whwh = self.preprocess_image(batched_inputs)
  File "/data/zelinliu/SparseRCNN/sparsercnn/detector.py", line 342, in preprocess_image
    assert bi["image"].shape[-2:] == bi["pre_img"].shape[-2:]
KeyError: 'pre_img'
[09/27 14:34:54] detectron2.engine.hooks INFO: Overall training speed: 4997 iterations in 1:15:06 (0.9018 s / it)
[09/27 14:34:54] detectron2.engine.hooks INFO: Total training time: 1:15:35 (0:00:29 on hooks)
[09/27 14:55:08] detectron2 INFO: Rank of current process: 1. World size: 4
[09/27 14:55:10] detectron2 INFO: Environment info:
-------------------------------  ----------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/data/zelinliu/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.4
detectron2 arch flags            8.6
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          1.9.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version                   470.199.02
CUDA_HOME                        /usr/local/cuda-11.4
Pillow                           9.5.0
torchvision                      0.10.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[09/27 14:55:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/MDR-r50-500pro-50e.yaml', resume=True, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50153', opts=['MODEL.WEIGHTS', '/data/zelinliu/SparseRCNN/output_mix20/model_0004999.pth'])
[09/27 14:55:10] detectron2 INFO: Contents of args.config_file=configs/MDR-r50-500pro-50e.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-MDR.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/data/zelinliu/SparseRCNN/resnet50-0676ba61.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mMDR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m("my_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(49532,[39m[38;5;141m [39m[38;5;141m58966)[39m[38;5;15m [39m[38;5;242m# 1769[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m63684[39m[38;5;15m [39m[38;5;242m#1769*36[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m [39m[38;5;242m# ÊöÇÊó∂‰∏çÊîØÊåÅÊ∑∑ÂêàÁ≤æÂ∫¶ËÆ≠ÁªÉ ‰ª•Âèä ÂçäÁ≤æÂ∫¶Êé®ÁêÜ[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800,[39m[38;5;141m [39m[38;5;141m832,[39m[38;5;141m [39m[38;5;141m864)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1620[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput_mix20[39m[38;5;186m"[39m

[09/27 14:55:11] detectron2.engine.defaults INFO: Model:
MDR(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (init_proposal_features): Embedding(500, 256)
  (init_proposal_boxes): Embedding(500, 4)
  (head): DynamicHead(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (head_series): ModuleList(
      (0): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (1): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (2): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (3): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (4): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (5): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): HungarianMatcher()
  )
)
[09/27 14:55:11] detectron2 INFO: ==> initializing train data from /data/zelinliu/SparseRCNN/mix/mix_20/annotations/train.json, 
 images from /data/zelinliu ...
[09/27 14:55:21] detectron2 WARNING: 
        Category_ids in current annotations file are not start to 0, we will map 'category_id' in the annotation files to 0..num_categories !      
                 
[09/27 14:55:21] detectron2 INFO: Creating video index!
[09/27 14:55:21] detectron2 INFO: TransformGens used in training: [RandomFlip(), ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800, 832, 864), max_size=1500, sample_style='choice'), <detectron2.data.transforms.augmentation_impl.RandomApply object at 0x7f3599876370>]
[09/27 14:55:21] detectron2 INFO: Loaded Custom dataset 28301 samples
[09/27 14:55:22] detectron2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from output_mix20/model_0004999.pth ...
[09/27 14:55:22] fvcore.common.checkpoint INFO: [Checkpointer] Loading from output_mix20/model_0004999.pth ...
[09/27 14:55:25] fvcore.common.checkpoint INFO: Loading trainer from output_mix20/model_0004999.pth ...
[09/27 14:55:25] detectron2.engine.hooks INFO: Loading scheduler from state_dict ...
[09/27 14:55:26] detectron2.engine.train_loop INFO: Starting training from iteration 5000
[09/27 16:10:41] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| pedestrian | 1134614      |
|            |              |[0m
[09/27 16:10:41] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 16:10:41] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 16:10:41] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 16:10:42] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 16:10:42] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 16:10:49] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 16:10:52] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0009 s/iter. Inference: 0.0529 s/iter. Eval: 0.0009 s/iter. Total: 0.0547 s/iter. ETA=0:02:01
[09/27 16:10:57] detectron2.evaluation.evaluator INFO: Inference done 82/2233. Dataloading: 0.0019 s/iter. Inference: 0.0670 s/iter. Eval: 0.0008 s/iter. Total: 0.0698 s/iter. ETA=0:02:30
[09/27 16:11:02] detectron2.evaluation.evaluator INFO: Inference done 170/2233. Dataloading: 0.0016 s/iter. Inference: 0.0604 s/iter. Eval: 0.0008 s/iter. Total: 0.0629 s/iter. ETA=0:02:09
[09/27 16:11:07] detectron2.evaluation.evaluator INFO: Inference done 259/2233. Dataloading: 0.0015 s/iter. Inference: 0.0582 s/iter. Eval: 0.0008 s/iter. Total: 0.0606 s/iter. ETA=0:01:59
[09/27 16:11:14] detectron2.evaluation.evaluator INFO: Inference done 340/2233. Dataloading: 0.0015 s/iter. Inference: 0.0574 s/iter. Eval: 0.0073 s/iter. Total: 0.0664 s/iter. ETA=0:02:05
[09/27 16:11:19] detectron2.evaluation.evaluator INFO: Inference done 431/2233. Dataloading: 0.0015 s/iter. Inference: 0.0565 s/iter. Eval: 0.0059 s/iter. Total: 0.0640 s/iter. ETA=0:01:55
[09/27 16:11:24] detectron2.evaluation.evaluator INFO: Inference done 519/2233. Dataloading: 0.0015 s/iter. Inference: 0.0562 s/iter. Eval: 0.0050 s/iter. Total: 0.0628 s/iter. ETA=0:01:47
[09/27 16:11:29] detectron2.evaluation.evaluator INFO: Inference done 608/2233. Dataloading: 0.0015 s/iter. Inference: 0.0560 s/iter. Eval: 0.0044 s/iter. Total: 0.0619 s/iter. ETA=0:01:40
[09/27 16:11:34] detectron2.evaluation.evaluator INFO: Inference done 697/2233. Dataloading: 0.0015 s/iter. Inference: 0.0557 s/iter. Eval: 0.0040 s/iter. Total: 0.0613 s/iter. ETA=0:01:34
[09/27 16:11:39] detectron2.evaluation.evaluator INFO: Inference done 786/2233. Dataloading: 0.0015 s/iter. Inference: 0.0556 s/iter. Eval: 0.0036 s/iter. Total: 0.0607 s/iter. ETA=0:01:27
[09/27 16:11:44] detectron2.evaluation.evaluator INFO: Inference done 875/2233. Dataloading: 0.0015 s/iter. Inference: 0.0554 s/iter. Eval: 0.0033 s/iter. Total: 0.0602 s/iter. ETA=0:01:21
[09/27 16:11:49] detectron2.evaluation.evaluator INFO: Inference done 963/2233. Dataloading: 0.0015 s/iter. Inference: 0.0553 s/iter. Eval: 0.0031 s/iter. Total: 0.0599 s/iter. ETA=0:01:16
[09/27 16:11:54] detectron2.evaluation.evaluator INFO: Inference done 1051/2233. Dataloading: 0.0015 s/iter. Inference: 0.0553 s/iter. Eval: 0.0029 s/iter. Total: 0.0597 s/iter. ETA=0:01:10
[09/27 16:11:59] detectron2.evaluation.evaluator INFO: Inference done 1142/2233. Dataloading: 0.0015 s/iter. Inference: 0.0551 s/iter. Eval: 0.0027 s/iter. Total: 0.0593 s/iter. ETA=0:01:04
[09/27 16:12:04] detectron2.evaluation.evaluator INFO: Inference done 1230/2233. Dataloading: 0.0014 s/iter. Inference: 0.0551 s/iter. Eval: 0.0026 s/iter. Total: 0.0592 s/iter. ETA=0:00:59
[09/27 16:12:09] detectron2.evaluation.evaluator INFO: Inference done 1322/2233. Dataloading: 0.0015 s/iter. Inference: 0.0549 s/iter. Eval: 0.0025 s/iter. Total: 0.0589 s/iter. ETA=0:00:53
[09/27 16:12:14] detectron2.evaluation.evaluator INFO: Inference done 1410/2233. Dataloading: 0.0014 s/iter. Inference: 0.0549 s/iter. Eval: 0.0024 s/iter. Total: 0.0588 s/iter. ETA=0:00:48
[09/27 16:12:19] detectron2.evaluation.evaluator INFO: Inference done 1499/2233. Dataloading: 0.0014 s/iter. Inference: 0.0549 s/iter. Eval: 0.0023 s/iter. Total: 0.0586 s/iter. ETA=0:00:43
[09/27 16:12:24] detectron2.evaluation.evaluator INFO: Inference done 1589/2233. Dataloading: 0.0014 s/iter. Inference: 0.0548 s/iter. Eval: 0.0022 s/iter. Total: 0.0585 s/iter. ETA=0:00:37
[09/27 16:12:29] detectron2.evaluation.evaluator INFO: Inference done 1680/2233. Dataloading: 0.0014 s/iter. Inference: 0.0547 s/iter. Eval: 0.0021 s/iter. Total: 0.0583 s/iter. ETA=0:00:32
[09/27 16:12:34] detectron2.evaluation.evaluator INFO: Inference done 1771/2233. Dataloading: 0.0014 s/iter. Inference: 0.0546 s/iter. Eval: 0.0021 s/iter. Total: 0.0581 s/iter. ETA=0:00:26
[09/27 16:12:39] detectron2.evaluation.evaluator INFO: Inference done 1863/2233. Dataloading: 0.0014 s/iter. Inference: 0.0545 s/iter. Eval: 0.0020 s/iter. Total: 0.0579 s/iter. ETA=0:00:21
[09/27 16:12:44] detectron2.evaluation.evaluator INFO: Inference done 1956/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0019 s/iter. Total: 0.0577 s/iter. ETA=0:00:15
[09/27 16:12:50] detectron2.evaluation.evaluator INFO: Inference done 2021/2233. Dataloading: 0.0014 s/iter. Inference: 0.0544 s/iter. Eval: 0.0031 s/iter. Total: 0.0590 s/iter. ETA=0:00:12
[09/27 16:12:55] detectron2.evaluation.evaluator INFO: Inference done 2116/2233. Dataloading: 0.0014 s/iter. Inference: 0.0542 s/iter. Eval: 0.0030 s/iter. Total: 0.0587 s/iter. ETA=0:00:06
[09/27 16:13:00] detectron2.evaluation.evaluator INFO: Inference done 2207/2233. Dataloading: 0.0014 s/iter. Inference: 0.0541 s/iter. Eval: 0.0029 s/iter. Total: 0.0586 s/iter. ETA=0:00:01
[09/27 16:13:02] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:10.821913 (0.058717 s / iter per device, on 4 devices)
[09/27 16:13:02] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:00 (0.054149 s / iter per device, on 4 devices)
[09/27 17:29:59] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 17:29:59] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 17:29:59] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 17:30:00] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 17:30:01] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 17:30:07] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 17:30:11] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0039 s/iter. Inference: 0.0827 s/iter. Eval: 0.0009 s/iter. Total: 0.0876 s/iter. ETA=0:03:14
[09/27 17:30:16] detectron2.evaluation.evaluator INFO: Inference done 93/2233. Dataloading: 0.0016 s/iter. Inference: 0.0603 s/iter. Eval: 0.0008 s/iter. Total: 0.0628 s/iter. ETA=0:02:14
[09/27 17:30:21] detectron2.evaluation.evaluator INFO: Inference done 179/2233. Dataloading: 0.0015 s/iter. Inference: 0.0582 s/iter. Eval: 0.0008 s/iter. Total: 0.0606 s/iter. ETA=0:02:04
[09/27 17:30:26] detectron2.evaluation.evaluator INFO: Inference done 267/2233. Dataloading: 0.0015 s/iter. Inference: 0.0571 s/iter. Eval: 0.0008 s/iter. Total: 0.0595 s/iter. ETA=0:01:56
[09/27 17:30:31] detectron2.evaluation.evaluator INFO: Inference done 357/2233. Dataloading: 0.0015 s/iter. Inference: 0.0562 s/iter. Eval: 0.0008 s/iter. Total: 0.0586 s/iter. ETA=0:01:49
[09/27 17:30:36] detectron2.evaluation.evaluator INFO: Inference done 446/2233. Dataloading: 0.0015 s/iter. Inference: 0.0558 s/iter. Eval: 0.0008 s/iter. Total: 0.0581 s/iter. ETA=0:01:43
[09/27 17:30:41] detectron2.evaluation.evaluator INFO: Inference done 535/2233. Dataloading: 0.0015 s/iter. Inference: 0.0555 s/iter. Eval: 0.0008 s/iter. Total: 0.0578 s/iter. ETA=0:01:38
[09/27 17:30:46] detectron2.evaluation.evaluator INFO: Inference done 622/2233. Dataloading: 0.0015 s/iter. Inference: 0.0555 s/iter. Eval: 0.0008 s/iter. Total: 0.0578 s/iter. ETA=0:01:33
[09/27 17:30:51] detectron2.evaluation.evaluator INFO: Inference done 710/2233. Dataloading: 0.0015 s/iter. Inference: 0.0555 s/iter. Eval: 0.0008 s/iter. Total: 0.0578 s/iter. ETA=0:01:27
[09/27 17:30:56] detectron2.evaluation.evaluator INFO: Inference done 801/2233. Dataloading: 0.0015 s/iter. Inference: 0.0552 s/iter. Eval: 0.0008 s/iter. Total: 0.0575 s/iter. ETA=0:01:22
[09/27 17:31:01] detectron2.evaluation.evaluator INFO: Inference done 891/2233. Dataloading: 0.0014 s/iter. Inference: 0.0551 s/iter. Eval: 0.0008 s/iter. Total: 0.0574 s/iter. ETA=0:01:16
[09/27 17:31:06] detectron2.evaluation.evaluator INFO: Inference done 981/2233. Dataloading: 0.0014 s/iter. Inference: 0.0549 s/iter. Eval: 0.0008 s/iter. Total: 0.0572 s/iter. ETA=0:01:11
[09/27 17:31:11] detectron2.evaluation.evaluator INFO: Inference done 1071/2233. Dataloading: 0.0014 s/iter. Inference: 0.0548 s/iter. Eval: 0.0008 s/iter. Total: 0.0571 s/iter. ETA=0:01:06
[09/27 17:31:16] detectron2.evaluation.evaluator INFO: Inference done 1118/2233. Dataloading: 0.0014 s/iter. Inference: 0.0546 s/iter. Eval: 0.0031 s/iter. Total: 0.0592 s/iter. ETA=0:01:05
[09/27 17:31:21] detectron2.evaluation.evaluator INFO: Inference done 1210/2233. Dataloading: 0.0014 s/iter. Inference: 0.0545 s/iter. Eval: 0.0029 s/iter. Total: 0.0588 s/iter. ETA=0:01:00
[09/27 17:31:26] detectron2.evaluation.evaluator INFO: Inference done 1302/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0027 s/iter. Total: 0.0586 s/iter. ETA=0:00:54
[09/27 17:31:31] detectron2.evaluation.evaluator INFO: Inference done 1392/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0026 s/iter. Total: 0.0584 s/iter. ETA=0:00:49
[09/27 17:31:36] detectron2.evaluation.evaluator INFO: Inference done 1480/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0025 s/iter. Total: 0.0583 s/iter. ETA=0:00:43
[09/27 17:31:41] detectron2.evaluation.evaluator INFO: Inference done 1569/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0024 s/iter. Total: 0.0582 s/iter. ETA=0:00:38
[09/27 17:31:46] detectron2.evaluation.evaluator INFO: Inference done 1659/2233. Dataloading: 0.0014 s/iter. Inference: 0.0542 s/iter. Eval: 0.0023 s/iter. Total: 0.0581 s/iter. ETA=0:00:33
[09/27 17:31:51] detectron2.evaluation.evaluator INFO: Inference done 1749/2233. Dataloading: 0.0014 s/iter. Inference: 0.0542 s/iter. Eval: 0.0022 s/iter. Total: 0.0579 s/iter. ETA=0:00:28
[09/27 17:31:56] detectron2.evaluation.evaluator INFO: Inference done 1843/2233. Dataloading: 0.0014 s/iter. Inference: 0.0541 s/iter. Eval: 0.0022 s/iter. Total: 0.0577 s/iter. ETA=0:00:22
[09/27 17:32:01] detectron2.evaluation.evaluator INFO: Inference done 1936/2233. Dataloading: 0.0014 s/iter. Inference: 0.0540 s/iter. Eval: 0.0021 s/iter. Total: 0.0576 s/iter. ETA=0:00:17
[09/27 17:32:06] detectron2.evaluation.evaluator INFO: Inference done 2027/2233. Dataloading: 0.0014 s/iter. Inference: 0.0539 s/iter. Eval: 0.0020 s/iter. Total: 0.0574 s/iter. ETA=0:00:11
[09/27 17:32:11] detectron2.evaluation.evaluator INFO: Inference done 2118/2233. Dataloading: 0.0014 s/iter. Inference: 0.0539 s/iter. Eval: 0.0020 s/iter. Total: 0.0573 s/iter. ETA=0:00:06
[09/27 17:32:16] detectron2.evaluation.evaluator INFO: Inference done 2210/2233. Dataloading: 0.0014 s/iter. Inference: 0.0538 s/iter. Eval: 0.0019 s/iter. Total: 0.0572 s/iter. ETA=0:00:01
[09/27 17:32:18] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:07.729492 (0.057329 s / iter per device, on 4 devices)
[09/27 17:32:18] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:59 (0.053779 s / iter per device, on 4 devices)
[09/27 18:49:02] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 18:49:02] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 18:49:02] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 18:49:03] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 18:49:03] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 18:49:10] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 18:49:14] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0010 s/iter. Inference: 0.0954 s/iter. Eval: 0.0026 s/iter. Total: 0.0991 s/iter. ETA=0:03:40
[09/27 18:49:19] detectron2.evaluation.evaluator INFO: Inference done 100/2233. Dataloading: 0.0013 s/iter. Inference: 0.0571 s/iter. Eval: 0.0009 s/iter. Total: 0.0593 s/iter. ETA=0:02:06
[09/27 18:49:24] detectron2.evaluation.evaluator INFO: Inference done 162/2233. Dataloading: 0.0013 s/iter. Inference: 0.0561 s/iter. Eval: 0.0146 s/iter. Total: 0.0721 s/iter. ETA=0:02:29
[09/27 18:49:29] detectron2.evaluation.evaluator INFO: Inference done 252/2233. Dataloading: 0.0013 s/iter. Inference: 0.0553 s/iter. Eval: 0.0096 s/iter. Total: 0.0663 s/iter. ETA=0:02:11
[09/27 18:49:34] detectron2.evaluation.evaluator INFO: Inference done 342/2233. Dataloading: 0.0013 s/iter. Inference: 0.0548 s/iter. Eval: 0.0072 s/iter. Total: 0.0635 s/iter. ETA=0:01:59
[09/27 18:49:40] detectron2.evaluation.evaluator INFO: Inference done 428/2233. Dataloading: 0.0013 s/iter. Inference: 0.0552 s/iter. Eval: 0.0059 s/iter. Total: 0.0625 s/iter. ETA=0:01:52
[09/27 18:49:45] detectron2.evaluation.evaluator INFO: Inference done 514/2233. Dataloading: 0.0014 s/iter. Inference: 0.0553 s/iter. Eval: 0.0050 s/iter. Total: 0.0617 s/iter. ETA=0:01:46
[09/27 18:49:50] detectron2.evaluation.evaluator INFO: Inference done 604/2233. Dataloading: 0.0014 s/iter. Inference: 0.0551 s/iter. Eval: 0.0044 s/iter. Total: 0.0609 s/iter. ETA=0:01:39
[09/27 18:49:55] detectron2.evaluation.evaluator INFO: Inference done 692/2233. Dataloading: 0.0014 s/iter. Inference: 0.0550 s/iter. Eval: 0.0039 s/iter. Total: 0.0604 s/iter. ETA=0:01:33
[09/27 18:50:00] detectron2.evaluation.evaluator INFO: Inference done 779/2233. Dataloading: 0.0014 s/iter. Inference: 0.0551 s/iter. Eval: 0.0036 s/iter. Total: 0.0601 s/iter. ETA=0:01:27
[09/27 18:50:05] detectron2.evaluation.evaluator INFO: Inference done 867/2233. Dataloading: 0.0014 s/iter. Inference: 0.0550 s/iter. Eval: 0.0033 s/iter. Total: 0.0598 s/iter. ETA=0:01:21
[09/27 18:50:10] detectron2.evaluation.evaluator INFO: Inference done 956/2233. Dataloading: 0.0014 s/iter. Inference: 0.0550 s/iter. Eval: 0.0031 s/iter. Total: 0.0595 s/iter. ETA=0:01:15
[09/27 18:50:15] detectron2.evaluation.evaluator INFO: Inference done 1049/2233. Dataloading: 0.0014 s/iter. Inference: 0.0547 s/iter. Eval: 0.0029 s/iter. Total: 0.0590 s/iter. ETA=0:01:09
[09/27 18:50:20] detectron2.evaluation.evaluator INFO: Inference done 1138/2233. Dataloading: 0.0014 s/iter. Inference: 0.0547 s/iter. Eval: 0.0027 s/iter. Total: 0.0588 s/iter. ETA=0:01:04
[09/27 18:50:25] detectron2.evaluation.evaluator INFO: Inference done 1229/2233. Dataloading: 0.0014 s/iter. Inference: 0.0545 s/iter. Eval: 0.0026 s/iter. Total: 0.0585 s/iter. ETA=0:00:58
[09/27 18:50:30] detectron2.evaluation.evaluator INFO: Inference done 1317/2233. Dataloading: 0.0014 s/iter. Inference: 0.0545 s/iter. Eval: 0.0024 s/iter. Total: 0.0584 s/iter. ETA=0:00:53
[09/27 18:50:35] detectron2.evaluation.evaluator INFO: Inference done 1408/2233. Dataloading: 0.0014 s/iter. Inference: 0.0544 s/iter. Eval: 0.0023 s/iter. Total: 0.0582 s/iter. ETA=0:00:48
[09/27 18:50:40] detectron2.evaluation.evaluator INFO: Inference done 1496/2233. Dataloading: 0.0014 s/iter. Inference: 0.0545 s/iter. Eval: 0.0022 s/iter. Total: 0.0581 s/iter. ETA=0:00:42
[09/27 18:50:45] detectron2.evaluation.evaluator INFO: Inference done 1587/2233. Dataloading: 0.0014 s/iter. Inference: 0.0544 s/iter. Eval: 0.0022 s/iter. Total: 0.0580 s/iter. ETA=0:00:37
[09/27 18:50:50] detectron2.evaluation.evaluator INFO: Inference done 1677/2233. Dataloading: 0.0014 s/iter. Inference: 0.0544 s/iter. Eval: 0.0021 s/iter. Total: 0.0579 s/iter. ETA=0:00:32
[09/27 18:50:55] detectron2.evaluation.evaluator INFO: Inference done 1767/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0020 s/iter. Total: 0.0578 s/iter. ETA=0:00:26
[09/27 18:51:00] detectron2.evaluation.evaluator INFO: Inference done 1816/2233. Dataloading: 0.0027 s/iter. Inference: 0.0543 s/iter. Eval: 0.0020 s/iter. Total: 0.0590 s/iter. ETA=0:00:24
[09/27 18:51:05] detectron2.evaluation.evaluator INFO: Inference done 1904/2233. Dataloading: 0.0026 s/iter. Inference: 0.0543 s/iter. Eval: 0.0019 s/iter. Total: 0.0589 s/iter. ETA=0:00:19
[09/27 18:51:10] detectron2.evaluation.evaluator INFO: Inference done 1994/2233. Dataloading: 0.0026 s/iter. Inference: 0.0543 s/iter. Eval: 0.0019 s/iter. Total: 0.0588 s/iter. ETA=0:00:14
[09/27 18:51:15] detectron2.evaluation.evaluator INFO: Inference done 2085/2233. Dataloading: 0.0025 s/iter. Inference: 0.0542 s/iter. Eval: 0.0018 s/iter. Total: 0.0586 s/iter. ETA=0:00:08
[09/27 18:51:20] detectron2.evaluation.evaluator INFO: Inference done 2178/2233. Dataloading: 0.0025 s/iter. Inference: 0.0541 s/iter. Eval: 0.0018 s/iter. Total: 0.0584 s/iter. ETA=0:00:03
[09/27 18:51:23] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:10.359657 (0.058510 s / iter per device, on 4 devices)
[09/27 18:51:23] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:00 (0.054053 s / iter per device, on 4 devices)
[09/27 20:07:26] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 20:07:26] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 20:07:26] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 20:07:27] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 20:07:28] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 20:07:34] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 20:07:38] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0007 s/iter. Inference: 0.0610 s/iter. Eval: 0.0165 s/iter. Total: 0.0783 s/iter. ETA=0:02:53
[09/27 20:07:43] detectron2.evaluation.evaluator INFO: Inference done 98/2233. Dataloading: 0.0013 s/iter. Inference: 0.0558 s/iter. Eval: 0.0018 s/iter. Total: 0.0590 s/iter. ETA=0:02:05
[09/27 20:07:48] detectron2.evaluation.evaluator INFO: Inference done 186/2233. Dataloading: 0.0014 s/iter. Inference: 0.0553 s/iter. Eval: 0.0013 s/iter. Total: 0.0581 s/iter. ETA=0:01:58
[09/27 20:07:53] detectron2.evaluation.evaluator INFO: Inference done 274/2233. Dataloading: 0.0014 s/iter. Inference: 0.0553 s/iter. Eval: 0.0011 s/iter. Total: 0.0578 s/iter. ETA=0:01:53
[09/27 20:07:58] detectron2.evaluation.evaluator INFO: Inference done 362/2233. Dataloading: 0.0014 s/iter. Inference: 0.0551 s/iter. Eval: 0.0010 s/iter. Total: 0.0576 s/iter. ETA=0:01:47
[09/27 20:08:03] detectron2.evaluation.evaluator INFO: Inference done 453/2233. Dataloading: 0.0014 s/iter. Inference: 0.0546 s/iter. Eval: 0.0010 s/iter. Total: 0.0570 s/iter. ETA=0:01:41
[09/27 20:08:08] detectron2.evaluation.evaluator INFO: Inference done 543/2233. Dataloading: 0.0014 s/iter. Inference: 0.0544 s/iter. Eval: 0.0010 s/iter. Total: 0.0568 s/iter. ETA=0:01:36
[09/27 20:08:13] detectron2.evaluation.evaluator INFO: Inference done 593/2233. Dataloading: 0.0014 s/iter. Inference: 0.0543 s/iter. Eval: 0.0049 s/iter. Total: 0.0605 s/iter. ETA=0:01:39
[09/27 20:08:18] detectron2.evaluation.evaluator INFO: Inference done 684/2233. Dataloading: 0.0014 s/iter. Inference: 0.0541 s/iter. Eval: 0.0043 s/iter. Total: 0.0598 s/iter. ETA=0:01:32
[09/27 20:08:23] detectron2.evaluation.evaluator INFO: Inference done 774/2233. Dataloading: 0.0014 s/iter. Inference: 0.0540 s/iter. Eval: 0.0039 s/iter. Total: 0.0593 s/iter. ETA=0:01:26
[09/27 20:08:28] detectron2.evaluation.evaluator INFO: Inference done 863/2233. Dataloading: 0.0014 s/iter. Inference: 0.0540 s/iter. Eval: 0.0036 s/iter. Total: 0.0590 s/iter. ETA=0:01:20
[09/27 20:08:33] detectron2.evaluation.evaluator INFO: Inference done 954/2233. Dataloading: 0.0014 s/iter. Inference: 0.0540 s/iter. Eval: 0.0033 s/iter. Total: 0.0587 s/iter. ETA=0:01:15
[09/27 20:08:38] detectron2.evaluation.evaluator INFO: Inference done 1046/2233. Dataloading: 0.0014 s/iter. Inference: 0.0538 s/iter. Eval: 0.0031 s/iter. Total: 0.0583 s/iter. ETA=0:01:09
[09/27 20:08:43] detectron2.evaluation.evaluator INFO: Inference done 1138/2233. Dataloading: 0.0014 s/iter. Inference: 0.0537 s/iter. Eval: 0.0029 s/iter. Total: 0.0580 s/iter. ETA=0:01:03
[09/27 20:08:48] detectron2.evaluation.evaluator INFO: Inference done 1231/2233. Dataloading: 0.0014 s/iter. Inference: 0.0536 s/iter. Eval: 0.0027 s/iter. Total: 0.0577 s/iter. ETA=0:00:57
[09/27 20:08:53] detectron2.evaluation.evaluator INFO: Inference done 1323/2233. Dataloading: 0.0013 s/iter. Inference: 0.0535 s/iter. Eval: 0.0026 s/iter. Total: 0.0575 s/iter. ETA=0:00:52
[09/27 20:08:58] detectron2.evaluation.evaluator INFO: Inference done 1415/2233. Dataloading: 0.0013 s/iter. Inference: 0.0535 s/iter. Eval: 0.0025 s/iter. Total: 0.0573 s/iter. ETA=0:00:46
[09/27 20:09:03] detectron2.evaluation.evaluator INFO: Inference done 1506/2233. Dataloading: 0.0013 s/iter. Inference: 0.0534 s/iter. Eval: 0.0024 s/iter. Total: 0.0572 s/iter. ETA=0:00:41
[09/27 20:09:08] detectron2.evaluation.evaluator INFO: Inference done 1598/2233. Dataloading: 0.0013 s/iter. Inference: 0.0534 s/iter. Eval: 0.0023 s/iter. Total: 0.0571 s/iter. ETA=0:00:36
[09/27 20:09:13] detectron2.evaluation.evaluator INFO: Inference done 1689/2233. Dataloading: 0.0013 s/iter. Inference: 0.0534 s/iter. Eval: 0.0022 s/iter. Total: 0.0570 s/iter. ETA=0:00:30
[09/27 20:09:18] detectron2.evaluation.evaluator INFO: Inference done 1781/2233. Dataloading: 0.0013 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0569 s/iter. ETA=0:00:25
[09/27 20:09:23] detectron2.evaluation.evaluator INFO: Inference done 1874/2233. Dataloading: 0.0013 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0567 s/iter. ETA=0:00:20
[09/27 20:09:28] detectron2.evaluation.evaluator INFO: Inference done 1967/2233. Dataloading: 0.0013 s/iter. Inference: 0.0532 s/iter. Eval: 0.0020 s/iter. Total: 0.0566 s/iter. ETA=0:00:15
[09/27 20:09:33] detectron2.evaluation.evaluator INFO: Inference done 2060/2233. Dataloading: 0.0013 s/iter. Inference: 0.0531 s/iter. Eval: 0.0020 s/iter. Total: 0.0565 s/iter. ETA=0:00:09
[09/27 20:09:38] detectron2.evaluation.evaluator INFO: Inference done 2151/2233. Dataloading: 0.0013 s/iter. Inference: 0.0531 s/iter. Eval: 0.0019 s/iter. Total: 0.0564 s/iter. ETA=0:00:04
[09/27 20:09:43] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:05.891905 (0.056504 s / iter per device, on 4 devices)
[09/27 20:09:43] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053059 s / iter per device, on 4 devices)
[09/27 21:26:50] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 21:26:50] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 21:26:50] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 21:26:51] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 21:26:52] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 21:26:58] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 21:27:02] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0007 s/iter. Inference: 0.0550 s/iter. Eval: 0.0202 s/iter. Total: 0.0759 s/iter. ETA=0:02:48
[09/27 21:27:07] detectron2.evaluation.evaluator INFO: Inference done 97/2233. Dataloading: 0.0016 s/iter. Inference: 0.0559 s/iter. Eval: 0.0022 s/iter. Total: 0.0597 s/iter. ETA=0:02:07
[09/27 21:27:12] detectron2.evaluation.evaluator INFO: Inference done 183/2233. Dataloading: 0.0017 s/iter. Inference: 0.0558 s/iter. Eval: 0.0016 s/iter. Total: 0.0591 s/iter. ETA=0:02:01
[09/27 21:27:17] detectron2.evaluation.evaluator INFO: Inference done 269/2233. Dataloading: 0.0017 s/iter. Inference: 0.0557 s/iter. Eval: 0.0013 s/iter. Total: 0.0588 s/iter. ETA=0:01:55
[09/27 21:27:22] detectron2.evaluation.evaluator INFO: Inference done 356/2233. Dataloading: 0.0017 s/iter. Inference: 0.0556 s/iter. Eval: 0.0012 s/iter. Total: 0.0586 s/iter. ETA=0:01:50
[09/27 21:27:27] detectron2.evaluation.evaluator INFO: Inference done 441/2233. Dataloading: 0.0017 s/iter. Inference: 0.0557 s/iter. Eval: 0.0012 s/iter. Total: 0.0587 s/iter. ETA=0:01:45
[09/27 21:27:32] detectron2.evaluation.evaluator INFO: Inference done 526/2233. Dataloading: 0.0017 s/iter. Inference: 0.0559 s/iter. Eval: 0.0011 s/iter. Total: 0.0587 s/iter. ETA=0:01:40
[09/27 21:27:37] detectron2.evaluation.evaluator INFO: Inference done 613/2233. Dataloading: 0.0017 s/iter. Inference: 0.0558 s/iter. Eval: 0.0011 s/iter. Total: 0.0586 s/iter. ETA=0:01:34
[09/27 21:27:42] detectron2.evaluation.evaluator INFO: Inference done 699/2233. Dataloading: 0.0017 s/iter. Inference: 0.0558 s/iter. Eval: 0.0011 s/iter. Total: 0.0586 s/iter. ETA=0:01:29
[09/27 21:27:47] detectron2.evaluation.evaluator INFO: Inference done 783/2233. Dataloading: 0.0017 s/iter. Inference: 0.0560 s/iter. Eval: 0.0011 s/iter. Total: 0.0587 s/iter. ETA=0:01:25
[09/27 21:27:52] detectron2.evaluation.evaluator INFO: Inference done 870/2233. Dataloading: 0.0017 s/iter. Inference: 0.0559 s/iter. Eval: 0.0010 s/iter. Total: 0.0587 s/iter. ETA=0:01:19
[09/27 21:27:57] detectron2.evaluation.evaluator INFO: Inference done 956/2233. Dataloading: 0.0017 s/iter. Inference: 0.0559 s/iter. Eval: 0.0010 s/iter. Total: 0.0586 s/iter. ETA=0:01:14
[09/27 21:28:02] detectron2.evaluation.evaluator INFO: Inference done 1047/2233. Dataloading: 0.0017 s/iter. Inference: 0.0556 s/iter. Eval: 0.0010 s/iter. Total: 0.0584 s/iter. ETA=0:01:09
[09/27 21:28:07] detectron2.evaluation.evaluator INFO: Inference done 1094/2233. Dataloading: 0.0017 s/iter. Inference: 0.0555 s/iter. Eval: 0.0032 s/iter. Total: 0.0605 s/iter. ETA=0:01:08
[09/27 21:28:13] detectron2.evaluation.evaluator INFO: Inference done 1184/2233. Dataloading: 0.0016 s/iter. Inference: 0.0553 s/iter. Eval: 0.0031 s/iter. Total: 0.0601 s/iter. ETA=0:01:03
[09/27 21:28:18] detectron2.evaluation.evaluator INFO: Inference done 1273/2233. Dataloading: 0.0016 s/iter. Inference: 0.0552 s/iter. Eval: 0.0029 s/iter. Total: 0.0599 s/iter. ETA=0:00:57
[09/27 21:28:23] detectron2.evaluation.evaluator INFO: Inference done 1362/2233. Dataloading: 0.0016 s/iter. Inference: 0.0551 s/iter. Eval: 0.0028 s/iter. Total: 0.0596 s/iter. ETA=0:00:51
[09/27 21:28:28] detectron2.evaluation.evaluator INFO: Inference done 1451/2233. Dataloading: 0.0016 s/iter. Inference: 0.0550 s/iter. Eval: 0.0027 s/iter. Total: 0.0594 s/iter. ETA=0:00:46
[09/27 21:28:33] detectron2.evaluation.evaluator INFO: Inference done 1541/2233. Dataloading: 0.0016 s/iter. Inference: 0.0549 s/iter. Eval: 0.0026 s/iter. Total: 0.0592 s/iter. ETA=0:00:40
[09/27 21:28:38] detectron2.evaluation.evaluator INFO: Inference done 1630/2233. Dataloading: 0.0016 s/iter. Inference: 0.0549 s/iter. Eval: 0.0025 s/iter. Total: 0.0591 s/iter. ETA=0:00:35
[09/27 21:28:43] detectron2.evaluation.evaluator INFO: Inference done 1719/2233. Dataloading: 0.0016 s/iter. Inference: 0.0548 s/iter. Eval: 0.0024 s/iter. Total: 0.0589 s/iter. ETA=0:00:30
[09/27 21:28:48] detectron2.evaluation.evaluator INFO: Inference done 1809/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0023 s/iter. Total: 0.0587 s/iter. ETA=0:00:24
[09/27 21:28:53] detectron2.evaluation.evaluator INFO: Inference done 1898/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0023 s/iter. Total: 0.0586 s/iter. ETA=0:00:19
[09/27 21:28:58] detectron2.evaluation.evaluator INFO: Inference done 1989/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0022 s/iter. Total: 0.0585 s/iter. ETA=0:00:14
[09/27 21:29:03] detectron2.evaluation.evaluator INFO: Inference done 2076/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0022 s/iter. Total: 0.0584 s/iter. ETA=0:00:09
[09/27 21:29:08] detectron2.evaluation.evaluator INFO: Inference done 2165/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0021 s/iter. Total: 0.0584 s/iter. ETA=0:00:03
[09/27 21:29:12] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:10.125890 (0.058405 s / iter per device, on 4 devices)
[09/27 21:29:12] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:01 (0.054477 s / iter per device, on 4 devices)
[09/27 22:45:40] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/27 22:45:40] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 22:45:40] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/27 22:45:41] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/27 22:45:42] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/27 22:45:48] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/27 22:45:51] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0007 s/iter. Inference: 0.0583 s/iter. Eval: 0.0009 s/iter. Total: 0.0599 s/iter. ETA=0:02:13
[09/27 22:45:56] detectron2.evaluation.evaluator INFO: Inference done 100/2233. Dataloading: 0.0015 s/iter. Inference: 0.0541 s/iter. Eval: 0.0009 s/iter. Total: 0.0565 s/iter. ETA=0:02:00
[09/27 22:46:02] detectron2.evaluation.evaluator INFO: Inference done 189/2233. Dataloading: 0.0016 s/iter. Inference: 0.0542 s/iter. Eval: 0.0009 s/iter. Total: 0.0567 s/iter. ETA=0:01:55
[09/27 22:46:07] detectron2.evaluation.evaluator INFO: Inference done 276/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0009 s/iter. Total: 0.0571 s/iter. ETA=0:01:51
[09/27 22:46:12] detectron2.evaluation.evaluator INFO: Inference done 363/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0009 s/iter. Total: 0.0573 s/iter. ETA=0:01:47
[09/27 22:46:17] detectron2.evaluation.evaluator INFO: Inference done 449/2233. Dataloading: 0.0016 s/iter. Inference: 0.0550 s/iter. Eval: 0.0009 s/iter. Total: 0.0575 s/iter. ETA=0:01:42
[09/27 22:46:22] detectron2.evaluation.evaluator INFO: Inference done 536/2233. Dataloading: 0.0016 s/iter. Inference: 0.0551 s/iter. Eval: 0.0009 s/iter. Total: 0.0576 s/iter. ETA=0:01:37
[09/27 22:46:27] detectron2.evaluation.evaluator INFO: Inference done 625/2233. Dataloading: 0.0016 s/iter. Inference: 0.0549 s/iter. Eval: 0.0009 s/iter. Total: 0.0575 s/iter. ETA=0:01:32
[09/27 22:46:32] detectron2.evaluation.evaluator INFO: Inference done 715/2233. Dataloading: 0.0016 s/iter. Inference: 0.0548 s/iter. Eval: 0.0009 s/iter. Total: 0.0573 s/iter. ETA=0:01:26
[09/27 22:46:37] detectron2.evaluation.evaluator INFO: Inference done 804/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0009 s/iter. Total: 0.0572 s/iter. ETA=0:01:21
[09/27 22:46:42] detectron2.evaluation.evaluator INFO: Inference done 892/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0009 s/iter. Total: 0.0572 s/iter. ETA=0:01:16
[09/27 22:46:47] detectron2.evaluation.evaluator INFO: Inference done 981/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0009 s/iter. Total: 0.0571 s/iter. ETA=0:01:11
[09/27 22:46:52] detectron2.evaluation.evaluator INFO: Inference done 1075/2233. Dataloading: 0.0016 s/iter. Inference: 0.0543 s/iter. Eval: 0.0009 s/iter. Total: 0.0568 s/iter. ETA=0:01:05
[09/27 22:46:58] detectron2.evaluation.evaluator INFO: Inference done 1133/2233. Dataloading: 0.0016 s/iter. Inference: 0.0543 s/iter. Eval: 0.0031 s/iter. Total: 0.0590 s/iter. ETA=0:01:04
[09/27 22:47:03] detectron2.evaluation.evaluator INFO: Inference done 1225/2233. Dataloading: 0.0016 s/iter. Inference: 0.0541 s/iter. Eval: 0.0029 s/iter. Total: 0.0586 s/iter. ETA=0:00:59
[09/27 22:47:08] detectron2.evaluation.evaluator INFO: Inference done 1317/2233. Dataloading: 0.0016 s/iter. Inference: 0.0540 s/iter. Eval: 0.0028 s/iter. Total: 0.0584 s/iter. ETA=0:00:53
[09/27 22:47:13] detectron2.evaluation.evaluator INFO: Inference done 1409/2233. Dataloading: 0.0016 s/iter. Inference: 0.0539 s/iter. Eval: 0.0027 s/iter. Total: 0.0582 s/iter. ETA=0:00:47
[09/27 22:47:18] detectron2.evaluation.evaluator INFO: Inference done 1502/2233. Dataloading: 0.0016 s/iter. Inference: 0.0537 s/iter. Eval: 0.0026 s/iter. Total: 0.0579 s/iter. ETA=0:00:42
[09/27 22:47:23] detectron2.evaluation.evaluator INFO: Inference done 1593/2233. Dataloading: 0.0016 s/iter. Inference: 0.0537 s/iter. Eval: 0.0025 s/iter. Total: 0.0578 s/iter. ETA=0:00:36
[09/27 22:47:28] detectron2.evaluation.evaluator INFO: Inference done 1684/2233. Dataloading: 0.0016 s/iter. Inference: 0.0536 s/iter. Eval: 0.0024 s/iter. Total: 0.0576 s/iter. ETA=0:00:31
[09/27 22:47:33] detectron2.evaluation.evaluator INFO: Inference done 1776/2233. Dataloading: 0.0016 s/iter. Inference: 0.0535 s/iter. Eval: 0.0023 s/iter. Total: 0.0575 s/iter. ETA=0:00:26
[09/27 22:47:38] detectron2.evaluation.evaluator INFO: Inference done 1868/2233. Dataloading: 0.0016 s/iter. Inference: 0.0535 s/iter. Eval: 0.0022 s/iter. Total: 0.0573 s/iter. ETA=0:00:20
[09/27 22:47:43] detectron2.evaluation.evaluator INFO: Inference done 1960/2233. Dataloading: 0.0016 s/iter. Inference: 0.0534 s/iter. Eval: 0.0022 s/iter. Total: 0.0572 s/iter. ETA=0:00:15
[09/27 22:47:48] detectron2.evaluation.evaluator INFO: Inference done 2053/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0571 s/iter. ETA=0:00:10
[09/27 22:47:53] detectron2.evaluation.evaluator INFO: Inference done 2145/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0570 s/iter. ETA=0:00:05
[09/27 22:47:58] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:07.103940 (0.057048 s / iter per device, on 4 devices)
[09/27 22:47:58] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053232 s / iter per device, on 4 devices)
[09/28 00:04:01] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 00:04:01] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 00:04:01] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 00:04:03] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 00:04:03] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 00:04:10] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 00:04:14] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0009 s/iter. Inference: 0.0810 s/iter. Eval: 0.0253 s/iter. Total: 0.1072 s/iter. ETA=0:03:58
[09/28 00:04:19] detectron2.evaluation.evaluator INFO: Inference done 91/2233. Dataloading: 0.0018 s/iter. Inference: 0.0618 s/iter. Eval: 0.0026 s/iter. Total: 0.0662 s/iter. ETA=0:02:21
[09/28 00:04:24] detectron2.evaluation.evaluator INFO: Inference done 178/2233. Dataloading: 0.0017 s/iter. Inference: 0.0586 s/iter. Eval: 0.0018 s/iter. Total: 0.0622 s/iter. ETA=0:02:07
[09/28 00:04:31] detectron2.evaluation.evaluator INFO: Inference done 262/2233. Dataloading: 0.0016 s/iter. Inference: 0.0572 s/iter. Eval: 0.0103 s/iter. Total: 0.0692 s/iter. ETA=0:02:16
[09/28 00:04:36] detectron2.evaluation.evaluator INFO: Inference done 351/2233. Dataloading: 0.0016 s/iter. Inference: 0.0564 s/iter. Eval: 0.0079 s/iter. Total: 0.0659 s/iter. ETA=0:02:04
[09/28 00:04:41] detectron2.evaluation.evaluator INFO: Inference done 439/2233. Dataloading: 0.0016 s/iter. Inference: 0.0561 s/iter. Eval: 0.0064 s/iter. Total: 0.0641 s/iter. ETA=0:01:55
[09/28 00:04:46] detectron2.evaluation.evaluator INFO: Inference done 530/2233. Dataloading: 0.0015 s/iter. Inference: 0.0555 s/iter. Eval: 0.0055 s/iter. Total: 0.0626 s/iter. ETA=0:01:46
[09/28 00:04:51] detectron2.evaluation.evaluator INFO: Inference done 622/2233. Dataloading: 0.0015 s/iter. Inference: 0.0551 s/iter. Eval: 0.0047 s/iter. Total: 0.0614 s/iter. ETA=0:01:38
[09/28 00:04:56] detectron2.evaluation.evaluator INFO: Inference done 708/2233. Dataloading: 0.0015 s/iter. Inference: 0.0552 s/iter. Eval: 0.0043 s/iter. Total: 0.0611 s/iter. ETA=0:01:33
[09/28 00:05:01] detectron2.evaluation.evaluator INFO: Inference done 798/2233. Dataloading: 0.0015 s/iter. Inference: 0.0550 s/iter. Eval: 0.0039 s/iter. Total: 0.0605 s/iter. ETA=0:01:26
[09/28 00:05:06] detectron2.evaluation.evaluator INFO: Inference done 884/2233. Dataloading: 0.0015 s/iter. Inference: 0.0551 s/iter. Eval: 0.0036 s/iter. Total: 0.0603 s/iter. ETA=0:01:21
[09/28 00:05:11] detectron2.evaluation.evaluator INFO: Inference done 974/2233. Dataloading: 0.0015 s/iter. Inference: 0.0550 s/iter. Eval: 0.0033 s/iter. Total: 0.0599 s/iter. ETA=0:01:15
[09/28 00:05:16] detectron2.evaluation.evaluator INFO: Inference done 1068/2233. Dataloading: 0.0015 s/iter. Inference: 0.0547 s/iter. Eval: 0.0031 s/iter. Total: 0.0594 s/iter. ETA=0:01:09
[09/28 00:05:21] detectron2.evaluation.evaluator INFO: Inference done 1161/2233. Dataloading: 0.0015 s/iter. Inference: 0.0544 s/iter. Eval: 0.0029 s/iter. Total: 0.0589 s/iter. ETA=0:01:03
[09/28 00:05:26] detectron2.evaluation.evaluator INFO: Inference done 1255/2233. Dataloading: 0.0015 s/iter. Inference: 0.0542 s/iter. Eval: 0.0028 s/iter. Total: 0.0585 s/iter. ETA=0:00:57
[09/28 00:05:31] detectron2.evaluation.evaluator INFO: Inference done 1348/2233. Dataloading: 0.0015 s/iter. Inference: 0.0540 s/iter. Eval: 0.0026 s/iter. Total: 0.0582 s/iter. ETA=0:00:51
[09/28 00:05:36] detectron2.evaluation.evaluator INFO: Inference done 1441/2233. Dataloading: 0.0015 s/iter. Inference: 0.0539 s/iter. Eval: 0.0025 s/iter. Total: 0.0579 s/iter. ETA=0:00:45
[09/28 00:05:41] detectron2.evaluation.evaluator INFO: Inference done 1531/2233. Dataloading: 0.0015 s/iter. Inference: 0.0539 s/iter. Eval: 0.0024 s/iter. Total: 0.0578 s/iter. ETA=0:00:40
[09/28 00:05:46] detectron2.evaluation.evaluator INFO: Inference done 1625/2233. Dataloading: 0.0015 s/iter. Inference: 0.0537 s/iter. Eval: 0.0023 s/iter. Total: 0.0576 s/iter. ETA=0:00:35
[09/28 00:05:51] detectron2.evaluation.evaluator INFO: Inference done 1717/2233. Dataloading: 0.0015 s/iter. Inference: 0.0537 s/iter. Eval: 0.0022 s/iter. Total: 0.0574 s/iter. ETA=0:00:29
[09/28 00:05:56] detectron2.evaluation.evaluator INFO: Inference done 1811/2233. Dataloading: 0.0015 s/iter. Inference: 0.0535 s/iter. Eval: 0.0022 s/iter. Total: 0.0572 s/iter. ETA=0:00:24
[09/28 00:06:01] detectron2.evaluation.evaluator INFO: Inference done 1905/2233. Dataloading: 0.0015 s/iter. Inference: 0.0534 s/iter. Eval: 0.0021 s/iter. Total: 0.0570 s/iter. ETA=0:00:18
[09/28 00:06:06] detectron2.evaluation.evaluator INFO: Inference done 1951/2233. Dataloading: 0.0015 s/iter. Inference: 0.0534 s/iter. Eval: 0.0034 s/iter. Total: 0.0583 s/iter. ETA=0:00:16
[09/28 00:06:11] detectron2.evaluation.evaluator INFO: Inference done 2042/2233. Dataloading: 0.0015 s/iter. Inference: 0.0534 s/iter. Eval: 0.0033 s/iter. Total: 0.0581 s/iter. ETA=0:00:11
[09/28 00:06:16] detectron2.evaluation.evaluator INFO: Inference done 2135/2233. Dataloading: 0.0014 s/iter. Inference: 0.0533 s/iter. Eval: 0.0032 s/iter. Total: 0.0580 s/iter. ETA=0:00:05
[09/28 00:06:21] detectron2.evaluation.evaluator INFO: Inference done 2225/2233. Dataloading: 0.0014 s/iter. Inference: 0.0533 s/iter. Eval: 0.0031 s/iter. Total: 0.0579 s/iter. ETA=0:00:00
[09/28 00:06:22] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:09.235587 (0.058005 s / iter per device, on 4 devices)
[09/28 00:06:22] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053268 s / iter per device, on 4 devices)
[09/28 01:23:08] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 01:23:08] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 01:23:08] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 01:23:09] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 01:23:10] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 01:23:15] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 01:23:19] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0006 s/iter. Inference: 0.0553 s/iter. Eval: 0.0008 s/iter. Total: 0.0567 s/iter. ETA=0:02:05
[09/28 01:23:24] detectron2.evaluation.evaluator INFO: Inference done 92/2233. Dataloading: 0.0017 s/iter. Inference: 0.0586 s/iter. Eval: 0.0012 s/iter. Total: 0.0615 s/iter. ETA=0:02:11
[09/28 01:23:29] detectron2.evaluation.evaluator INFO: Inference done 179/2233. Dataloading: 0.0017 s/iter. Inference: 0.0568 s/iter. Eval: 0.0011 s/iter. Total: 0.0596 s/iter. ETA=0:02:02
[09/28 01:23:34] detectron2.evaluation.evaluator INFO: Inference done 267/2233. Dataloading: 0.0017 s/iter. Inference: 0.0560 s/iter. Eval: 0.0010 s/iter. Total: 0.0588 s/iter. ETA=0:01:55
[09/28 01:23:39] detectron2.evaluation.evaluator INFO: Inference done 354/2233. Dataloading: 0.0017 s/iter. Inference: 0.0558 s/iter. Eval: 0.0010 s/iter. Total: 0.0585 s/iter. ETA=0:01:49
[09/28 01:23:44] detectron2.evaluation.evaluator INFO: Inference done 444/2233. Dataloading: 0.0017 s/iter. Inference: 0.0553 s/iter. Eval: 0.0010 s/iter. Total: 0.0580 s/iter. ETA=0:01:43
[09/28 01:23:49] detectron2.evaluation.evaluator INFO: Inference done 532/2233. Dataloading: 0.0017 s/iter. Inference: 0.0552 s/iter. Eval: 0.0009 s/iter. Total: 0.0579 s/iter. ETA=0:01:38
[09/28 01:23:54] detectron2.evaluation.evaluator INFO: Inference done 620/2233. Dataloading: 0.0017 s/iter. Inference: 0.0551 s/iter. Eval: 0.0009 s/iter. Total: 0.0577 s/iter. ETA=0:01:33
[09/28 01:23:59] detectron2.evaluation.evaluator INFO: Inference done 706/2233. Dataloading: 0.0017 s/iter. Inference: 0.0551 s/iter. Eval: 0.0009 s/iter. Total: 0.0578 s/iter. ETA=0:01:28
[09/28 01:24:04] detectron2.evaluation.evaluator INFO: Inference done 794/2233. Dataloading: 0.0017 s/iter. Inference: 0.0551 s/iter. Eval: 0.0009 s/iter. Total: 0.0578 s/iter. ETA=0:01:23
[09/28 01:24:10] detectron2.evaluation.evaluator INFO: Inference done 847/2233. Dataloading: 0.0017 s/iter. Inference: 0.0550 s/iter. Eval: 0.0041 s/iter. Total: 0.0609 s/iter. ETA=0:01:24
[09/28 01:24:15] detectron2.evaluation.evaluator INFO: Inference done 936/2233. Dataloading: 0.0017 s/iter. Inference: 0.0549 s/iter. Eval: 0.0038 s/iter. Total: 0.0604 s/iter. ETA=0:01:18
[09/28 01:24:20] detectron2.evaluation.evaluator INFO: Inference done 1030/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0035 s/iter. Total: 0.0598 s/iter. ETA=0:01:11
[09/28 01:24:25] detectron2.evaluation.evaluator INFO: Inference done 1122/2233. Dataloading: 0.0016 s/iter. Inference: 0.0544 s/iter. Eval: 0.0033 s/iter. Total: 0.0594 s/iter. ETA=0:01:05
[09/28 01:24:30] detectron2.evaluation.evaluator INFO: Inference done 1214/2233. Dataloading: 0.0016 s/iter. Inference: 0.0543 s/iter. Eval: 0.0031 s/iter. Total: 0.0590 s/iter. ETA=0:01:00
[09/28 01:24:35] detectron2.evaluation.evaluator INFO: Inference done 1307/2233. Dataloading: 0.0016 s/iter. Inference: 0.0541 s/iter. Eval: 0.0029 s/iter. Total: 0.0587 s/iter. ETA=0:00:54
[09/28 01:24:40] detectron2.evaluation.evaluator INFO: Inference done 1399/2233. Dataloading: 0.0016 s/iter. Inference: 0.0539 s/iter. Eval: 0.0028 s/iter. Total: 0.0584 s/iter. ETA=0:00:48
[09/28 01:24:45] detectron2.evaluation.evaluator INFO: Inference done 1494/2233. Dataloading: 0.0016 s/iter. Inference: 0.0538 s/iter. Eval: 0.0027 s/iter. Total: 0.0581 s/iter. ETA=0:00:42
[09/28 01:24:50] detectron2.evaluation.evaluator INFO: Inference done 1588/2233. Dataloading: 0.0016 s/iter. Inference: 0.0536 s/iter. Eval: 0.0025 s/iter. Total: 0.0578 s/iter. ETA=0:00:37
[09/28 01:24:55] detectron2.evaluation.evaluator INFO: Inference done 1681/2233. Dataloading: 0.0016 s/iter. Inference: 0.0535 s/iter. Eval: 0.0025 s/iter. Total: 0.0576 s/iter. ETA=0:00:31
[09/28 01:25:00] detectron2.evaluation.evaluator INFO: Inference done 1769/2233. Dataloading: 0.0016 s/iter. Inference: 0.0535 s/iter. Eval: 0.0024 s/iter. Total: 0.0576 s/iter. ETA=0:00:26
[09/28 01:25:05] detectron2.evaluation.evaluator INFO: Inference done 1861/2233. Dataloading: 0.0016 s/iter. Inference: 0.0535 s/iter. Eval: 0.0023 s/iter. Total: 0.0574 s/iter. ETA=0:00:21
[09/28 01:25:10] detectron2.evaluation.evaluator INFO: Inference done 1953/2233. Dataloading: 0.0016 s/iter. Inference: 0.0534 s/iter. Eval: 0.0022 s/iter. Total: 0.0573 s/iter. ETA=0:00:16
[09/28 01:25:15] detectron2.evaluation.evaluator INFO: Inference done 2048/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0022 s/iter. Total: 0.0571 s/iter. ETA=0:00:10
[09/28 01:25:20] detectron2.evaluation.evaluator INFO: Inference done 2140/2233. Dataloading: 0.0015 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0570 s/iter. ETA=0:00:05
[09/28 01:25:25] detectron2.evaluation.evaluator INFO: Inference done 2230/2233. Dataloading: 0.0015 s/iter. Inference: 0.0533 s/iter. Eval: 0.0021 s/iter. Total: 0.0569 s/iter. ETA=0:00:00
[09/28 01:25:26] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:07.242630 (0.057111 s / iter per device, on 4 devices)
[09/28 01:25:26] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053271 s / iter per device, on 4 devices)
[09/28 02:41:30] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 02:41:30] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 02:41:30] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 02:41:31] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 02:41:32] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 02:41:38] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 02:41:41] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0011 s/iter. Inference: 0.0597 s/iter. Eval: 0.0075 s/iter. Total: 0.0684 s/iter. ETA=0:02:31
[09/28 02:41:46] detectron2.evaluation.evaluator INFO: Inference done 99/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0013 s/iter. Total: 0.0576 s/iter. ETA=0:02:02
[09/28 02:41:51] detectron2.evaluation.evaluator INFO: Inference done 186/2233. Dataloading: 0.0016 s/iter. Inference: 0.0549 s/iter. Eval: 0.0011 s/iter. Total: 0.0577 s/iter. ETA=0:01:58
[09/28 02:41:56] detectron2.evaluation.evaluator INFO: Inference done 272/2233. Dataloading: 0.0017 s/iter. Inference: 0.0552 s/iter. Eval: 0.0010 s/iter. Total: 0.0580 s/iter. ETA=0:01:53
[09/28 02:42:01] detectron2.evaluation.evaluator INFO: Inference done 360/2233. Dataloading: 0.0017 s/iter. Inference: 0.0551 s/iter. Eval: 0.0010 s/iter. Total: 0.0578 s/iter. ETA=0:01:48
[09/28 02:42:06] detectron2.evaluation.evaluator INFO: Inference done 448/2233. Dataloading: 0.0017 s/iter. Inference: 0.0550 s/iter. Eval: 0.0010 s/iter. Total: 0.0577 s/iter. ETA=0:01:43
[09/28 02:42:11] detectron2.evaluation.evaluator INFO: Inference done 493/2233. Dataloading: 0.0017 s/iter. Inference: 0.0548 s/iter. Eval: 0.0062 s/iter. Total: 0.0627 s/iter. ETA=0:01:49
[09/28 02:42:16] detectron2.evaluation.evaluator INFO: Inference done 580/2233. Dataloading: 0.0017 s/iter. Inference: 0.0549 s/iter. Eval: 0.0054 s/iter. Total: 0.0620 s/iter. ETA=0:01:42
[09/28 02:42:21] detectron2.evaluation.evaluator INFO: Inference done 668/2233. Dataloading: 0.0017 s/iter. Inference: 0.0548 s/iter. Eval: 0.0048 s/iter. Total: 0.0614 s/iter. ETA=0:01:36
[09/28 02:42:26] detectron2.evaluation.evaluator INFO: Inference done 757/2233. Dataloading: 0.0017 s/iter. Inference: 0.0547 s/iter. Eval: 0.0044 s/iter. Total: 0.0607 s/iter. ETA=0:01:29
[09/28 02:42:31] detectron2.evaluation.evaluator INFO: Inference done 845/2233. Dataloading: 0.0017 s/iter. Inference: 0.0547 s/iter. Eval: 0.0040 s/iter. Total: 0.0604 s/iter. ETA=0:01:23
[09/28 02:42:36] detectron2.evaluation.evaluator INFO: Inference done 936/2233. Dataloading: 0.0017 s/iter. Inference: 0.0545 s/iter. Eval: 0.0037 s/iter. Total: 0.0599 s/iter. ETA=0:01:17
[09/28 02:42:41] detectron2.evaluation.evaluator INFO: Inference done 1026/2233. Dataloading: 0.0016 s/iter. Inference: 0.0544 s/iter. Eval: 0.0034 s/iter. Total: 0.0596 s/iter. ETA=0:01:11
[09/28 02:42:46] detectron2.evaluation.evaluator INFO: Inference done 1119/2233. Dataloading: 0.0016 s/iter. Inference: 0.0542 s/iter. Eval: 0.0032 s/iter. Total: 0.0591 s/iter. ETA=0:01:05
[09/28 02:42:51] detectron2.evaluation.evaluator INFO: Inference done 1209/2233. Dataloading: 0.0016 s/iter. Inference: 0.0541 s/iter. Eval: 0.0030 s/iter. Total: 0.0588 s/iter. ETA=0:01:00
[09/28 02:42:56] detectron2.evaluation.evaluator INFO: Inference done 1303/2233. Dataloading: 0.0016 s/iter. Inference: 0.0539 s/iter. Eval: 0.0029 s/iter. Total: 0.0585 s/iter. ETA=0:00:54
[09/28 02:43:02] detectron2.evaluation.evaluator INFO: Inference done 1396/2233. Dataloading: 0.0016 s/iter. Inference: 0.0538 s/iter. Eval: 0.0027 s/iter. Total: 0.0582 s/iter. ETA=0:00:48
[09/28 02:43:07] detectron2.evaluation.evaluator INFO: Inference done 1485/2233. Dataloading: 0.0016 s/iter. Inference: 0.0538 s/iter. Eval: 0.0026 s/iter. Total: 0.0581 s/iter. ETA=0:00:43
[09/28 02:43:12] detectron2.evaluation.evaluator INFO: Inference done 1577/2233. Dataloading: 0.0016 s/iter. Inference: 0.0537 s/iter. Eval: 0.0025 s/iter. Total: 0.0579 s/iter. ETA=0:00:37
[09/28 02:43:17] detectron2.evaluation.evaluator INFO: Inference done 1671/2233. Dataloading: 0.0016 s/iter. Inference: 0.0536 s/iter. Eval: 0.0024 s/iter. Total: 0.0577 s/iter. ETA=0:00:32
[09/28 02:43:22] detectron2.evaluation.evaluator INFO: Inference done 1768/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0023 s/iter. Total: 0.0573 s/iter. ETA=0:00:26
[09/28 02:43:27] detectron2.evaluation.evaluator INFO: Inference done 1860/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0023 s/iter. Total: 0.0572 s/iter. ETA=0:00:21
[09/28 02:43:32] detectron2.evaluation.evaluator INFO: Inference done 1954/2233. Dataloading: 0.0016 s/iter. Inference: 0.0532 s/iter. Eval: 0.0022 s/iter. Total: 0.0571 s/iter. ETA=0:00:15
[09/28 02:43:37] detectron2.evaluation.evaluator INFO: Inference done 2045/2233. Dataloading: 0.0016 s/iter. Inference: 0.0532 s/iter. Eval: 0.0021 s/iter. Total: 0.0570 s/iter. ETA=0:00:10
[09/28 02:43:42] detectron2.evaluation.evaluator INFO: Inference done 2137/2233. Dataloading: 0.0016 s/iter. Inference: 0.0531 s/iter. Eval: 0.0021 s/iter. Total: 0.0569 s/iter. ETA=0:00:05
[09/28 02:43:47] detectron2.evaluation.evaluator INFO: Inference done 2182/2233. Dataloading: 0.0016 s/iter. Inference: 0.0531 s/iter. Eval: 0.0032 s/iter. Total: 0.0580 s/iter. ETA=0:00:02
[09/28 02:43:50] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:09.421730 (0.058089 s / iter per device, on 4 devices)
[09/28 02:43:50] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053057 s / iter per device, on 4 devices)
[09/28 04:00:11] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 04:00:11] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 04:00:11] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 04:00:13] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 04:00:13] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 04:00:20] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 04:00:24] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0007 s/iter. Inference: 0.0651 s/iter. Eval: 0.0167 s/iter. Total: 0.0825 s/iter. ETA=0:03:03
[09/28 04:00:29] detectron2.evaluation.evaluator INFO: Inference done 98/2233. Dataloading: 0.0015 s/iter. Inference: 0.0561 s/iter. Eval: 0.0019 s/iter. Total: 0.0596 s/iter. ETA=0:02:07
[09/28 04:00:34] detectron2.evaluation.evaluator INFO: Inference done 187/2233. Dataloading: 0.0016 s/iter. Inference: 0.0550 s/iter. Eval: 0.0014 s/iter. Total: 0.0581 s/iter. ETA=0:01:58
[09/28 04:00:39] detectron2.evaluation.evaluator INFO: Inference done 274/2233. Dataloading: 0.0016 s/iter. Inference: 0.0550 s/iter. Eval: 0.0013 s/iter. Total: 0.0580 s/iter. ETA=0:01:53
[09/28 04:00:44] detectron2.evaluation.evaluator INFO: Inference done 363/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0012 s/iter. Total: 0.0576 s/iter. ETA=0:01:47
[09/28 04:00:49] detectron2.evaluation.evaluator INFO: Inference done 411/2233. Dataloading: 0.0017 s/iter. Inference: 0.0546 s/iter. Eval: 0.0069 s/iter. Total: 0.0633 s/iter. ETA=0:01:55
[09/28 04:00:54] detectron2.evaluation.evaluator INFO: Inference done 498/2233. Dataloading: 0.0017 s/iter. Inference: 0.0547 s/iter. Eval: 0.0059 s/iter. Total: 0.0623 s/iter. ETA=0:01:48
[09/28 04:00:59] detectron2.evaluation.evaluator INFO: Inference done 585/2233. Dataloading: 0.0017 s/iter. Inference: 0.0548 s/iter. Eval: 0.0051 s/iter. Total: 0.0616 s/iter. ETA=0:01:41
[09/28 04:01:04] detectron2.evaluation.evaluator INFO: Inference done 672/2233. Dataloading: 0.0017 s/iter. Inference: 0.0548 s/iter. Eval: 0.0046 s/iter. Total: 0.0611 s/iter. ETA=0:01:35
[09/28 04:01:09] detectron2.evaluation.evaluator INFO: Inference done 761/2233. Dataloading: 0.0017 s/iter. Inference: 0.0547 s/iter. Eval: 0.0042 s/iter. Total: 0.0606 s/iter. ETA=0:01:29
[09/28 04:01:14] detectron2.evaluation.evaluator INFO: Inference done 848/2233. Dataloading: 0.0017 s/iter. Inference: 0.0547 s/iter. Eval: 0.0038 s/iter. Total: 0.0603 s/iter. ETA=0:01:23
[09/28 04:01:19] detectron2.evaluation.evaluator INFO: Inference done 938/2233. Dataloading: 0.0017 s/iter. Inference: 0.0546 s/iter. Eval: 0.0035 s/iter. Total: 0.0599 s/iter. ETA=0:01:17
[09/28 04:01:24] detectron2.evaluation.evaluator INFO: Inference done 1027/2233. Dataloading: 0.0017 s/iter. Inference: 0.0545 s/iter. Eval: 0.0033 s/iter. Total: 0.0596 s/iter. ETA=0:01:11
[09/28 04:01:29] detectron2.evaluation.evaluator INFO: Inference done 1121/2233. Dataloading: 0.0017 s/iter. Inference: 0.0542 s/iter. Eval: 0.0031 s/iter. Total: 0.0591 s/iter. ETA=0:01:05
[09/28 04:01:34] detectron2.evaluation.evaluator INFO: Inference done 1214/2233. Dataloading: 0.0017 s/iter. Inference: 0.0540 s/iter. Eval: 0.0029 s/iter. Total: 0.0587 s/iter. ETA=0:00:59
[09/28 04:01:39] detectron2.evaluation.evaluator INFO: Inference done 1307/2233. Dataloading: 0.0017 s/iter. Inference: 0.0538 s/iter. Eval: 0.0028 s/iter. Total: 0.0584 s/iter. ETA=0:00:54
[09/28 04:01:44] detectron2.evaluation.evaluator INFO: Inference done 1400/2233. Dataloading: 0.0017 s/iter. Inference: 0.0537 s/iter. Eval: 0.0027 s/iter. Total: 0.0581 s/iter. ETA=0:00:48
[09/28 04:01:49] detectron2.evaluation.evaluator INFO: Inference done 1492/2233. Dataloading: 0.0017 s/iter. Inference: 0.0536 s/iter. Eval: 0.0026 s/iter. Total: 0.0579 s/iter. ETA=0:00:42
[09/28 04:01:54] detectron2.evaluation.evaluator INFO: Inference done 1584/2233. Dataloading: 0.0017 s/iter. Inference: 0.0535 s/iter. Eval: 0.0025 s/iter. Total: 0.0577 s/iter. ETA=0:00:37
[09/28 04:01:59] detectron2.evaluation.evaluator INFO: Inference done 1676/2233. Dataloading: 0.0017 s/iter. Inference: 0.0534 s/iter. Eval: 0.0024 s/iter. Total: 0.0575 s/iter. ETA=0:00:32
[09/28 04:02:04] detectron2.evaluation.evaluator INFO: Inference done 1768/2233. Dataloading: 0.0017 s/iter. Inference: 0.0533 s/iter. Eval: 0.0023 s/iter. Total: 0.0573 s/iter. ETA=0:00:26
[09/28 04:02:10] detectron2.evaluation.evaluator INFO: Inference done 1860/2233. Dataloading: 0.0017 s/iter. Inference: 0.0533 s/iter. Eval: 0.0022 s/iter. Total: 0.0572 s/iter. ETA=0:00:21
[09/28 04:02:15] detectron2.evaluation.evaluator INFO: Inference done 1952/2233. Dataloading: 0.0017 s/iter. Inference: 0.0532 s/iter. Eval: 0.0022 s/iter. Total: 0.0571 s/iter. ETA=0:00:16
[09/28 04:02:20] detectron2.evaluation.evaluator INFO: Inference done 2043/2233. Dataloading: 0.0017 s/iter. Inference: 0.0532 s/iter. Eval: 0.0021 s/iter. Total: 0.0570 s/iter. ETA=0:00:10
[09/28 04:02:25] detectron2.evaluation.evaluator INFO: Inference done 2086/2233. Dataloading: 0.0017 s/iter. Inference: 0.0532 s/iter. Eval: 0.0035 s/iter. Total: 0.0583 s/iter. ETA=0:00:08
[09/28 04:02:30] detectron2.evaluation.evaluator INFO: Inference done 2177/2233. Dataloading: 0.0017 s/iter. Inference: 0.0531 s/iter. Eval: 0.0033 s/iter. Total: 0.0582 s/iter. ETA=0:00:03
[09/28 04:02:33] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:09.804680 (0.058261 s / iter per device, on 4 devices)
[09/28 04:02:33] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:58 (0.053100 s / iter per device, on 4 devices)
[09/28 05:19:07] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 05:19:07] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 05:19:07] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 05:19:08] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 05:19:09] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 05:19:15] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 05:19:18] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0009 s/iter. Inference: 0.0772 s/iter. Eval: 0.0008 s/iter. Total: 0.0789 s/iter. ETA=0:02:55
[09/28 05:19:23] detectron2.evaluation.evaluator INFO: Inference done 97/2233. Dataloading: 0.0016 s/iter. Inference: 0.0579 s/iter. Eval: 0.0009 s/iter. Total: 0.0604 s/iter. ETA=0:02:08
[09/28 05:19:28] detectron2.evaluation.evaluator INFO: Inference done 179/2233. Dataloading: 0.0016 s/iter. Inference: 0.0581 s/iter. Eval: 0.0010 s/iter. Total: 0.0609 s/iter. ETA=0:02:05
[09/28 05:19:33] detectron2.evaluation.evaluator INFO: Inference done 225/2233. Dataloading: 0.0016 s/iter. Inference: 0.0574 s/iter. Eval: 0.0115 s/iter. Total: 0.0709 s/iter. ETA=0:02:22
[09/28 05:19:38] detectron2.evaluation.evaluator INFO: Inference done 316/2233. Dataloading: 0.0016 s/iter. Inference: 0.0560 s/iter. Eval: 0.0084 s/iter. Total: 0.0664 s/iter. ETA=0:02:07
[09/28 05:19:43] detectron2.evaluation.evaluator INFO: Inference done 406/2233. Dataloading: 0.0016 s/iter. Inference: 0.0554 s/iter. Eval: 0.0067 s/iter. Total: 0.0641 s/iter. ETA=0:01:57
[09/28 05:19:48] detectron2.evaluation.evaluator INFO: Inference done 494/2233. Dataloading: 0.0016 s/iter. Inference: 0.0553 s/iter. Eval: 0.0057 s/iter. Total: 0.0628 s/iter. ETA=0:01:49
[09/28 05:19:53] detectron2.evaluation.evaluator INFO: Inference done 583/2233. Dataloading: 0.0017 s/iter. Inference: 0.0550 s/iter. Eval: 0.0049 s/iter. Total: 0.0618 s/iter. ETA=0:01:41
[09/28 05:19:59] detectron2.evaluation.evaluator INFO: Inference done 673/2233. Dataloading: 0.0016 s/iter. Inference: 0.0548 s/iter. Eval: 0.0044 s/iter. Total: 0.0610 s/iter. ETA=0:01:35
[09/28 05:20:04] detectron2.evaluation.evaluator INFO: Inference done 763/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0040 s/iter. Total: 0.0604 s/iter. ETA=0:01:28
[09/28 05:20:09] detectron2.evaluation.evaluator INFO: Inference done 852/2233. Dataloading: 0.0016 s/iter. Inference: 0.0546 s/iter. Eval: 0.0037 s/iter. Total: 0.0600 s/iter. ETA=0:01:22
[09/28 05:20:14] detectron2.evaluation.evaluator INFO: Inference done 943/2233. Dataloading: 0.0017 s/iter. Inference: 0.0544 s/iter. Eval: 0.0034 s/iter. Total: 0.0595 s/iter. ETA=0:01:16
[09/28 05:20:19] detectron2.evaluation.evaluator INFO: Inference done 1038/2233. Dataloading: 0.0016 s/iter. Inference: 0.0540 s/iter. Eval: 0.0031 s/iter. Total: 0.0589 s/iter. ETA=0:01:10
[09/28 05:20:24] detectron2.evaluation.evaluator INFO: Inference done 1132/2233. Dataloading: 0.0016 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0585 s/iter. ETA=0:01:04
[09/28 05:20:29] detectron2.evaluation.evaluator INFO: Inference done 1229/2233. Dataloading: 0.0016 s/iter. Inference: 0.0534 s/iter. Eval: 0.0028 s/iter. Total: 0.0579 s/iter. ETA=0:00:58
[09/28 05:20:34] detectron2.evaluation.evaluator INFO: Inference done 1320/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0026 s/iter. Total: 0.0577 s/iter. ETA=0:00:52
[09/28 05:20:39] detectron2.evaluation.evaluator INFO: Inference done 1412/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0025 s/iter. Total: 0.0575 s/iter. ETA=0:00:47
[09/28 05:20:44] detectron2.evaluation.evaluator INFO: Inference done 1504/2233. Dataloading: 0.0016 s/iter. Inference: 0.0532 s/iter. Eval: 0.0024 s/iter. Total: 0.0574 s/iter. ETA=0:00:41
[09/28 05:20:49] detectron2.evaluation.evaluator INFO: Inference done 1599/2233. Dataloading: 0.0016 s/iter. Inference: 0.0531 s/iter. Eval: 0.0023 s/iter. Total: 0.0571 s/iter. ETA=0:00:36
[09/28 05:20:54] detectron2.evaluation.evaluator INFO: Inference done 1694/2233. Dataloading: 0.0016 s/iter. Inference: 0.0529 s/iter. Eval: 0.0022 s/iter. Total: 0.0569 s/iter. ETA=0:00:30
[09/28 05:20:59] detectron2.evaluation.evaluator INFO: Inference done 1788/2233. Dataloading: 0.0016 s/iter. Inference: 0.0528 s/iter. Eval: 0.0022 s/iter. Total: 0.0567 s/iter. ETA=0:00:25
[09/28 05:21:05] detectron2.evaluation.evaluator INFO: Inference done 1851/2233. Dataloading: 0.0016 s/iter. Inference: 0.0528 s/iter. Eval: 0.0035 s/iter. Total: 0.0580 s/iter. ETA=0:00:22
[09/28 05:21:10] detectron2.evaluation.evaluator INFO: Inference done 1945/2233. Dataloading: 0.0016 s/iter. Inference: 0.0527 s/iter. Eval: 0.0034 s/iter. Total: 0.0578 s/iter. ETA=0:00:16
[09/28 05:21:15] detectron2.evaluation.evaluator INFO: Inference done 2037/2233. Dataloading: 0.0016 s/iter. Inference: 0.0527 s/iter. Eval: 0.0033 s/iter. Total: 0.0577 s/iter. ETA=0:00:11
[09/28 05:21:20] detectron2.evaluation.evaluator INFO: Inference done 2130/2233. Dataloading: 0.0016 s/iter. Inference: 0.0527 s/iter. Eval: 0.0032 s/iter. Total: 0.0575 s/iter. ETA=0:00:05
[09/28 05:21:25] detectron2.evaluation.evaluator INFO: Inference done 2224/2233. Dataloading: 0.0016 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0573 s/iter. ETA=0:00:00
[09/28 05:21:26] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:08.080291 (0.057487 s / iter per device, on 4 devices)
[09/28 05:21:26] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:57 (0.052573 s / iter per device, on 4 devices)
[09/28 06:18:32] detectron2.engine.hooks INFO: Overall training speed: 58682 iterations in 14:26:21 (0.8858 s / it)
[09/28 06:18:32] detectron2.engine.hooks INFO: Total training time: 15:22:18 (0:55:57 on hooks)
[09/28 06:18:45] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 06:18:45] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 06:18:45] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 06:18:46] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 06:18:47] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 06:18:53] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 06:18:57] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0011 s/iter. Inference: 0.0601 s/iter. Eval: 0.0008 s/iter. Total: 0.0621 s/iter. ETA=0:02:17
[09/28 06:19:02] detectron2.evaluation.evaluator INFO: Inference done 99/2233. Dataloading: 0.0016 s/iter. Inference: 0.0550 s/iter. Eval: 0.0009 s/iter. Total: 0.0575 s/iter. ETA=0:02:02
[09/28 06:19:07] detectron2.evaluation.evaluator INFO: Inference done 187/2233. Dataloading: 0.0016 s/iter. Inference: 0.0547 s/iter. Eval: 0.0009 s/iter. Total: 0.0572 s/iter. ETA=0:01:57
[09/28 06:19:12] detectron2.evaluation.evaluator INFO: Inference done 277/2233. Dataloading: 0.0017 s/iter. Inference: 0.0541 s/iter. Eval: 0.0009 s/iter. Total: 0.0567 s/iter. ETA=0:01:50
[09/28 06:19:17] detectron2.evaluation.evaluator INFO: Inference done 367/2233. Dataloading: 0.0017 s/iter. Inference: 0.0539 s/iter. Eval: 0.0009 s/iter. Total: 0.0565 s/iter. ETA=0:01:45
[09/28 06:19:22] detectron2.evaluation.evaluator INFO: Inference done 458/2233. Dataloading: 0.0017 s/iter. Inference: 0.0537 s/iter. Eval: 0.0009 s/iter. Total: 0.0563 s/iter. ETA=0:01:39
[09/28 06:19:27] detectron2.evaluation.evaluator INFO: Inference done 546/2233. Dataloading: 0.0017 s/iter. Inference: 0.0538 s/iter. Eval: 0.0009 s/iter. Total: 0.0564 s/iter. ETA=0:01:35
[09/28 06:19:32] detectron2.evaluation.evaluator INFO: Inference done 636/2233. Dataloading: 0.0017 s/iter. Inference: 0.0538 s/iter. Eval: 0.0009 s/iter. Total: 0.0564 s/iter. ETA=0:01:30
[09/28 06:19:37] detectron2.evaluation.evaluator INFO: Inference done 682/2233. Dataloading: 0.0017 s/iter. Inference: 0.0537 s/iter. Eval: 0.0045 s/iter. Total: 0.0600 s/iter. ETA=0:01:33
[09/28 06:19:42] detectron2.evaluation.evaluator INFO: Inference done 770/2233. Dataloading: 0.0017 s/iter. Inference: 0.0538 s/iter. Eval: 0.0041 s/iter. Total: 0.0597 s/iter. ETA=0:01:27
[09/28 06:19:47] detectron2.evaluation.evaluator INFO: Inference done 860/2233. Dataloading: 0.0017 s/iter. Inference: 0.0537 s/iter. Eval: 0.0038 s/iter. Total: 0.0592 s/iter. ETA=0:01:21
[09/28 06:19:52] detectron2.evaluation.evaluator INFO: Inference done 950/2233. Dataloading: 0.0016 s/iter. Inference: 0.0537 s/iter. Eval: 0.0035 s/iter. Total: 0.0589 s/iter. ETA=0:01:15
[09/28 06:19:57] detectron2.evaluation.evaluator INFO: Inference done 1043/2233. Dataloading: 0.0016 s/iter. Inference: 0.0536 s/iter. Eval: 0.0033 s/iter. Total: 0.0585 s/iter. ETA=0:01:09
[09/28 06:20:02] detectron2.evaluation.evaluator INFO: Inference done 1136/2233. Dataloading: 0.0016 s/iter. Inference: 0.0534 s/iter. Eval: 0.0031 s/iter. Total: 0.0582 s/iter. ETA=0:01:03
[09/28 06:20:07] detectron2.evaluation.evaluator INFO: Inference done 1229/2233. Dataloading: 0.0016 s/iter. Inference: 0.0533 s/iter. Eval: 0.0029 s/iter. Total: 0.0579 s/iter. ETA=0:00:58
[09/28 06:20:12] detectron2.evaluation.evaluator INFO: Inference done 1323/2233. Dataloading: 0.0016 s/iter. Inference: 0.0531 s/iter. Eval: 0.0028 s/iter. Total: 0.0576 s/iter. ETA=0:00:52
[09/28 06:20:17] detectron2.evaluation.evaluator INFO: Inference done 1417/2233. Dataloading: 0.0016 s/iter. Inference: 0.0530 s/iter. Eval: 0.0026 s/iter. Total: 0.0573 s/iter. ETA=0:00:46
[09/28 06:20:22] detectron2.evaluation.evaluator INFO: Inference done 1508/2233. Dataloading: 0.0016 s/iter. Inference: 0.0530 s/iter. Eval: 0.0025 s/iter. Total: 0.0572 s/iter. ETA=0:00:41
[09/28 06:20:27] detectron2.evaluation.evaluator INFO: Inference done 1601/2233. Dataloading: 0.0016 s/iter. Inference: 0.0529 s/iter. Eval: 0.0024 s/iter. Total: 0.0570 s/iter. ETA=0:00:36
[09/28 06:20:32] detectron2.evaluation.evaluator INFO: Inference done 1696/2233. Dataloading: 0.0016 s/iter. Inference: 0.0528 s/iter. Eval: 0.0023 s/iter. Total: 0.0568 s/iter. ETA=0:00:30
[09/28 06:20:37] detectron2.evaluation.evaluator INFO: Inference done 1792/2233. Dataloading: 0.0016 s/iter. Inference: 0.0526 s/iter. Eval: 0.0022 s/iter. Total: 0.0565 s/iter. ETA=0:00:24
[09/28 06:20:42] detectron2.evaluation.evaluator INFO: Inference done 1886/2233. Dataloading: 0.0016 s/iter. Inference: 0.0525 s/iter. Eval: 0.0022 s/iter. Total: 0.0564 s/iter. ETA=0:00:19
[09/28 06:20:47] detectron2.evaluation.evaluator INFO: Inference done 1979/2233. Dataloading: 0.0016 s/iter. Inference: 0.0525 s/iter. Eval: 0.0021 s/iter. Total: 0.0563 s/iter. ETA=0:00:14
[09/28 06:20:52] detectron2.evaluation.evaluator INFO: Inference done 2074/2233. Dataloading: 0.0016 s/iter. Inference: 0.0524 s/iter. Eval: 0.0021 s/iter. Total: 0.0561 s/iter. ETA=0:00:08
[09/28 06:20:57] detectron2.evaluation.evaluator INFO: Inference done 2167/2233. Dataloading: 0.0016 s/iter. Inference: 0.0524 s/iter. Eval: 0.0020 s/iter. Total: 0.0561 s/iter. ETA=0:00:03
[09/28 06:21:01] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:05.202697 (0.056195 s / iter per device, on 4 devices)
[09/28 06:21:01] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:56 (0.052411 s / iter per device, on 4 devices)
[09/28 09:26:40] detectron2 INFO: Rank of current process: 1. World size: 4
[09/28 09:26:41] detectron2 INFO: Environment info:
-------------------------------  ----------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/data/zelinliu/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.4
detectron2 arch flags            8.6
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          1.9.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version                   470.199.02
CUDA_HOME                        /usr/local/cuda-11.4
Pillow                           9.5.0
torchvision                      0.10.1+cu111 @/home/lzl/miniconda3/envs/d2/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[09/28 09:26:41] detectron2 INFO: Command line arguments: Namespace(config_file='configs/MDR-r50-500pro-50e.yaml', resume=False, eval_only=True, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50153', opts=['MODEL.WEIGHTS', '/data/zelinliu/SparseRCNN/output_mix20/model_final.pth'])
[09/28 09:26:41] detectron2 INFO: Contents of args.config_file=configs/MDR-r50-500pro-50e.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-MDR.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/data/zelinliu/SparseRCNN/resnet50-0676ba61.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mMDR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m("my_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(49532,[39m[38;5;141m [39m[38;5;141m58966)[39m[38;5;15m [39m[38;5;242m# 1769[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m63684[39m[38;5;15m [39m[38;5;242m#1769*36[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m [39m[38;5;242m# ÊöÇÊó∂‰∏çÊîØÊåÅÊ∑∑ÂêàÁ≤æÂ∫¶ËÆ≠ÁªÉ ‰ª•Âèä ÂçäÁ≤æÂ∫¶Êé®ÁêÜ[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800,[39m[38;5;141m [39m[38;5;141m832,[39m[38;5;141m [39m[38;5;141m864)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1620[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput_mix20[39m[38;5;186m"[39m

[09/28 09:26:42] detectron2.engine.defaults INFO: Model:
MDR(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (init_proposal_features): Embedding(500, 256)
  (init_proposal_boxes): Embedding(500, 4)
  (head): DynamicHead(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (head_series): ModuleList(
      (0): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (1): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (2): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (3): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (4): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
      (5): RCNNHead(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (inst_interact): DynamicConv(
          (dynamic_layer): Linear(in_features=256, out_features=32768, bias=True)
          (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (activation): ReLU(inplace=True)
          (out_layer): Linear(in_features=12544, out_features=256, bias=True)
          (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (linear1): Linear(in_features=256, out_features=2048, bias=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (linear2): Linear(in_features=2048, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.0, inplace=False)
        (dropout2): Dropout(p=0.0, inplace=False)
        (dropout3): Dropout(p=0.0, inplace=False)
        (cls_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (reg_module): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=False)
          (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=256, out_features=256, bias=False)
          (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (5): ReLU(inplace=True)
          (6): Linear(in_features=256, out_features=256, bias=False)
          (7): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (8): ReLU(inplace=True)
        )
        (class_logits): Linear(in_features=256, out_features=1, bias=True)
        (bboxes_delta): Linear(in_features=256, out_features=4, bias=True)
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): HungarianMatcher()
  )
)
[09/28 09:26:42] detectron2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /data/zelinliu/SparseRCNN/output_mix20/model_final.pth ...
[09/28 09:26:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /data/zelinliu/SparseRCNN/output_mix20/model_final.pth ...
[09/28 09:26:55] detectron2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| pedestrian | 1134614      |
|            |              |[0m
[09/28 09:26:55] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1500, sample_style='choice')]
[09/28 09:26:55] detectron2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 09:26:55] detectron2.data.common INFO: Serializing 8931 elements to byte tensors and concatenating them all ...
[09/28 09:26:56] detectron2.data.common INFO: Serialized dataset takes 72.55 MiB
[09/28 09:26:57] detectron2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 09:27:02] detectron2.evaluation.evaluator INFO: Start inference on 2233 batches
[09/28 09:27:06] detectron2.evaluation.evaluator INFO: Inference done 11/2233. Dataloading: 0.0029 s/iter. Inference: 0.0871 s/iter. Eval: 0.0008 s/iter. Total: 0.0907 s/iter. ETA=0:03:21
[09/28 09:27:11] detectron2.evaluation.evaluator INFO: Inference done 97/2233. Dataloading: 0.0015 s/iter. Inference: 0.0581 s/iter. Eval: 0.0007 s/iter. Total: 0.0604 s/iter. ETA=0:02:09
[09/28 09:27:16] detectron2.evaluation.evaluator INFO: Inference done 178/2233. Dataloading: 0.0015 s/iter. Inference: 0.0587 s/iter. Eval: 0.0008 s/iter. Total: 0.0611 s/iter. ETA=0:02:05
[09/28 09:27:21] detectron2.evaluation.evaluator INFO: Inference done 264/2233. Dataloading: 0.0015 s/iter. Inference: 0.0579 s/iter. Eval: 0.0008 s/iter. Total: 0.0602 s/iter. ETA=0:01:58
[09/28 09:27:26] detectron2.evaluation.evaluator INFO: Inference done 347/2233. Dataloading: 0.0015 s/iter. Inference: 0.0580 s/iter. Eval: 0.0008 s/iter. Total: 0.0603 s/iter. ETA=0:01:53
[09/28 09:27:31] detectron2.evaluation.evaluator INFO: Inference done 431/2233. Dataloading: 0.0015 s/iter. Inference: 0.0580 s/iter. Eval: 0.0008 s/iter. Total: 0.0603 s/iter. ETA=0:01:48
[09/28 09:27:36] detectron2.evaluation.evaluator INFO: Inference done 499/2233. Dataloading: 0.0015 s/iter. Inference: 0.0580 s/iter. Eval: 0.0026 s/iter. Total: 0.0622 s/iter. ETA=0:01:47
[09/28 09:27:41] detectron2.evaluation.evaluator INFO: Inference done 586/2233. Dataloading: 0.0015 s/iter. Inference: 0.0576 s/iter. Eval: 0.0023 s/iter. Total: 0.0615 s/iter. ETA=0:01:41
[09/28 09:27:46] detectron2.evaluation.evaluator INFO: Inference done 669/2233. Dataloading: 0.0015 s/iter. Inference: 0.0577 s/iter. Eval: 0.0021 s/iter. Total: 0.0614 s/iter. ETA=0:01:36
[09/28 09:27:51] detectron2.evaluation.evaluator INFO: Inference done 753/2233. Dataloading: 0.0015 s/iter. Inference: 0.0577 s/iter. Eval: 0.0020 s/iter. Total: 0.0612 s/iter. ETA=0:01:30
[09/28 09:27:56] detectron2.evaluation.evaluator INFO: Inference done 838/2233. Dataloading: 0.0015 s/iter. Inference: 0.0576 s/iter. Eval: 0.0019 s/iter. Total: 0.0610 s/iter. ETA=0:01:25
[09/28 09:28:01] detectron2.evaluation.evaluator INFO: Inference done 925/2233. Dataloading: 0.0015 s/iter. Inference: 0.0574 s/iter. Eval: 0.0018 s/iter. Total: 0.0607 s/iter. ETA=0:01:19
[09/28 09:28:06] detectron2.evaluation.evaluator INFO: Inference done 1014/2233. Dataloading: 0.0015 s/iter. Inference: 0.0571 s/iter. Eval: 0.0017 s/iter. Total: 0.0603 s/iter. ETA=0:01:13
[09/28 09:28:11] detectron2.evaluation.evaluator INFO: Inference done 1106/2233. Dataloading: 0.0015 s/iter. Inference: 0.0567 s/iter. Eval: 0.0016 s/iter. Total: 0.0599 s/iter. ETA=0:01:07
[09/28 09:28:17] detectron2.evaluation.evaluator INFO: Inference done 1198/2233. Dataloading: 0.0015 s/iter. Inference: 0.0564 s/iter. Eval: 0.0015 s/iter. Total: 0.0595 s/iter. ETA=0:01:01
[09/28 09:28:22] detectron2.evaluation.evaluator INFO: Inference done 1268/2233. Dataloading: 0.0015 s/iter. Inference: 0.0563 s/iter. Eval: 0.0023 s/iter. Total: 0.0602 s/iter. ETA=0:00:58
[09/28 09:28:27] detectron2.evaluation.evaluator INFO: Inference done 1358/2233. Dataloading: 0.0015 s/iter. Inference: 0.0562 s/iter. Eval: 0.0022 s/iter. Total: 0.0599 s/iter. ETA=0:00:52
[09/28 09:28:32] detectron2.evaluation.evaluator INFO: Inference done 1449/2233. Dataloading: 0.0015 s/iter. Inference: 0.0559 s/iter. Eval: 0.0021 s/iter. Total: 0.0596 s/iter. ETA=0:00:46
[09/28 09:28:37] detectron2.evaluation.evaluator INFO: Inference done 1539/2233. Dataloading: 0.0015 s/iter. Inference: 0.0558 s/iter. Eval: 0.0021 s/iter. Total: 0.0594 s/iter. ETA=0:00:41
[09/28 09:28:42] detectron2.evaluation.evaluator INFO: Inference done 1633/2233. Dataloading: 0.0014 s/iter. Inference: 0.0555 s/iter. Eval: 0.0020 s/iter. Total: 0.0590 s/iter. ETA=0:00:35
[09/28 09:28:47] detectron2.evaluation.evaluator INFO: Inference done 1724/2233. Dataloading: 0.0014 s/iter. Inference: 0.0554 s/iter. Eval: 0.0019 s/iter. Total: 0.0588 s/iter. ETA=0:00:29
[09/28 09:28:52] detectron2.evaluation.evaluator INFO: Inference done 1814/2233. Dataloading: 0.0014 s/iter. Inference: 0.0553 s/iter. Eval: 0.0019 s/iter. Total: 0.0587 s/iter. ETA=0:00:24
[09/28 09:28:57] detectron2.evaluation.evaluator INFO: Inference done 1905/2233. Dataloading: 0.0014 s/iter. Inference: 0.0552 s/iter. Eval: 0.0018 s/iter. Total: 0.0585 s/iter. ETA=0:00:19
[09/28 09:29:02] detectron2.evaluation.evaluator INFO: Inference done 1992/2233. Dataloading: 0.0014 s/iter. Inference: 0.0552 s/iter. Eval: 0.0018 s/iter. Total: 0.0585 s/iter. ETA=0:00:14
[09/28 09:29:07] detectron2.evaluation.evaluator INFO: Inference done 2084/2233. Dataloading: 0.0014 s/iter. Inference: 0.0550 s/iter. Eval: 0.0017 s/iter. Total: 0.0583 s/iter. ETA=0:00:08
[09/28 09:29:12] detectron2.evaluation.evaluator INFO: Inference done 2154/2233. Dataloading: 0.0014 s/iter. Inference: 0.0550 s/iter. Eval: 0.0023 s/iter. Total: 0.0587 s/iter. ETA=0:00:04
[09/28 09:29:16] detectron2.evaluation.evaluator INFO: Total inference time: 0:02:10.665871 (0.058647 s / iter per device, on 4 devices)
[09/28 09:29:16] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:02 (0.054771 s / iter per device, on 4 devices)
